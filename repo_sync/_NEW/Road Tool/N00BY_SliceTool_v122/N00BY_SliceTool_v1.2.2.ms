

------------------------------------------------------------------------------------------------------------------------------
-- slice Tool v1.2.2 - 08/03/2019
-- Dev by Benjamin Boscher aka N00BYZOR
-- Free for all use and / or modifications.
-- If you modify the script please mention my name or my nickname (or both ^^)
-- Cheers ;)
-- http://www.scriptspot.com/3ds-max/scripts/slice-tool
------------------------------------------------------------------------------------------------------------------------------


try(destroyDialog SliceToolRollout)catch()
rollout SliceToolRollout "N00BYZOR's slice tool ;)" width:248 height:152
(
	local mySliceModifiers = #()
	local SliceAxis = #X
	local bUseDistance = False
	
	spinner 'NumberOfSlices' "Slices" pos:[150,10] width:67 height:16 range:[0,1000,1] type:#integer align:#left tooltip:"Number of slices"
	spinner 'DistanceBetweenSlices' "Distance" pos:[135,32] width:75 height:16 range:[0.1,100000,10] toolTip:"Distance between slices" align:#left
	GroupBox 'OptionsBox' "Options" pos:[8,8] width:115 height:136 align:#left
	button 'X_Button' "X" pos:[16,32] width:23 height:21 toolTip:"Slices along the X axis" align:#left
	button 'Y_Button' "Y" pos:[48,32] width:23 height:21 toolTip:"Slices along the Y axis" align:#left
	button 'Z_Button' "Z" pos:[80,32] width:23 height:21 toolTip:"Slices along the Z axis" align:#left
	checkbutton 'preview' "Preview" pos:[144,52] width:90 height:30 align:#left --highlightColor: [random 0 255, random 0 255, random 0 255]
	button 'Accept' "Accept" pos:[144,88] width:90 height:30 enabled:false align:#left
	label 'version' "v1.2.2" pos:[143,128] width:34 height:13 align:#left
	button 'AboutButton' "About" pos:[186,126] width:44 height:20 align:#left
	checkbox 'Split_Mesh' "Split mesh" pos:[16,69] width:72 height:15 toolTip:"Check the \"Split Mesh\" option in every slice modifier." align:#left
	checkbox 'Collapse_Stack' "Collapse stack" pos:[16,93] width:93 height:15 checked:false toolTip:"Collapse the modifier stack after accepting." align:#left
	checkbox 'ResetXFormCheckbox' "Reset XForm before slicing" pos:[16,112] width:93 height:27 checked:false toolTip:"Useful when your object's local pivot is not aligned with the world." align:#left

	fn SliceMesh Axis:#X UseDistance:#True=
	(
		if Axis == #X do
		(
			if ResetXFormCheckbox.checked do
			(
				ResetXForm $
				ConvertTo $ Editable_Poly
			)
			
			if UseDistance == True then
			(
				objTM = $.objectTransform
				TotalDistance = $.max.x - $.min.x
				DistanceX = DistanceBetweenSlices.value
				DistanceSum = DistanceX
				NewNumberOfSlices = 0
				
				while (DistanceSum < TotalDistance) do
				(
					mySlice = SliceModifier()
					addmodifier $ mySlice --ui:off
					modTM = getModContextTM $ mySlice
					mySlice.Slice_Plane.position = (([$.min.x,$.pos.y,$.pos.z] + [DistanceSum,0,0]) * modTM * (inverse objTM))
					--mySlice.Slice_Plane.position = ([$.min.x,0,0] * modTM * (inverse objTM))
					mySlice.Slice_Plane.rotation.y_rotation = 90
					append mySliceModifiers mySlice
					DistanceSum += DistanceX
					NewNumberOfSlices += 1
				)
				NumberOfSlices.value = NewNumberOfSlices
			)
			else
			(
				objTM = $.objectTransform
				TotalDistance = $.max.x - $.min.x
				DistanceX = TotalDistance / (NumberOfSlices.value + 1)
				DistanceBetweenSlices.value = DistanceX
				
				for i = 1 to NumberOfSlices.value do
				(
					mySlice = SliceModifier()
					addmodifier $ mySlice --ui:off
					modTM = getModContextTM $ mySlice
					mySlice.Slice_Plane.position = (([$.min.x,$.pos.y,$.pos.z] + i * [DistanceX,0,0]) * modTM * (inverse objTM))
					--mySlice.Slice_Plane.position = ([$.min.x,0,0] * modTM * (inverse objTM))
					mySlice.Slice_Plane.rotation.y_rotation = 90
					append mySliceModifiers mySlice
				)
			)
		)
		if Axis == #Y do
		(
			if ResetXFormCheckbox.checked do
			(
				ResetXForm $
				ConvertTo $ Editable_Poly
			)
			
			if UseDistance == True then
			(
				objTM = $.objectTransform
				TotalDistance = $.max.y - $.min.y
				DistanceY = DistanceBetweenSlices.value
				DistanceSum = DistanceY
				NewNumberOfSlices = 0
				
				while (DistanceSum < TotalDistance) do
				(
					mySlice = SliceModifier()
					addmodifier $ mySlice --ui:off
					modTM = getModContextTM $ mySlice
					mySlice.Slice_Plane.position = (([$.pos.x,$.min.y,$.pos.z] + [0,DistanceSum,0]) * modTM * (inverse objTM))
					--mySlice.Slice_Plane.position = ([$.min.x,0,0] * modTM * (inverse objTM))
					mySlice.Slice_Plane.rotation.x_rotation = 90
					append mySliceModifiers mySlice
					DistanceSum += DistanceY
					NewNumberOfSlices += 1
				)
				NumberOfSlices.value = NewNumberOfSlices
			)
			else
			(
				objTM = $.objectTransform
				TotalDistance = $.max.y - $.min.y
				DistanceY = TotalDistance / (NumberOfSlices.value + 1)
				DistanceBetweenSlices.value = DistanceY
				
				for i = 1 to NumberOfSlices.value do
				(
					mySlice = SliceModifier()
					addmodifier $ mySlice --ui:off
					modTM = getModContextTM $ mySlice
					mySlice.Slice_Plane.position = (([$.pos.x,$.min.y,$.pos.z] + i * [0,DistanceY,0]) * modTM * (inverse objTM))
					--mySlice.Slice_Plane.position = ([$.min.x,0,0] * modTM * (inverse objTM))
					mySlice.Slice_Plane.rotation.x_rotation = 90
					append mySliceModifiers mySlice
				)
			)
		)
		if Axis == #Z do
		(
			if ResetXFormCheckbox.checked do
			(
				ResetXForm $
				ConvertTo $ Editable_Poly
			)
			
			if UseDistance == True then
			(
				objTM = $.objectTransform
				TotalDistance = $.max.z - $.min.z
				DistanceZ = DistanceBetweenSlices.value
				DistanceSum = DistanceZ
				NewNumberOfSlices = 0
				
				while (DistanceSum < TotalDistance) do
				(
					mySlice = SliceModifier()
					addmodifier $ mySlice --ui:off
					modTM = getModContextTM $ mySlice
					mySlice.Slice_Plane.position = (([$.pos.x,$.pos.y,$.min.z] + [0,0,DistanceSum]) * modTM * (inverse objTM))
					--mySlice.Slice_Plane.position = ([$.min.x,0,0] * modTM * (inverse objTM))
					--mySlice.Slice_Plane.rotation.y_rotation = 90
					append mySliceModifiers mySlice
					DistanceSum += DistanceZ
					NewNumberOfSlices += 1
				)
				NumberOfSlices.value = NewNumberOfSlices
			)
			else
			(
				objTM = $.objectTransform
				TotalDistance = $.max.z - $.min.z
				DistanceZ = TotalDistance / (NumberOfSlices.value + 1)
				DistanceBetweenSlices.value = DistanceZ
				
				for i = 1 to NumberOfSlices.value do
				(
					mySlice = SliceModifier()
					addmodifier $ mySlice --ui:off
					modTM = getModContextTM $ mySlice
					mySlice.Slice_Plane.position = (([$.pos.x,$.pos.y,$.min.z] + i * [0,0,DistanceZ]) * modTM * (inverse objTM))
					--mySlice.Slice_Plane.position = ([$.min.x,0,0] * modTM * (inverse objTM))
					--mySlice.Slice_Plane.rotation.y_rotation = 90
					append mySliceModifiers mySlice
				)
			)
		)
	)
	
	fn DeleteSlices =
	(
		for i in mySliceModifiers do
		(
			try(deleteModifier $ i)catch()
		)
		free mySliceModifiers
	)

	on SliceToolRollout close do
	(
		suspendEditing which:#modify
		DeleteSlices()
		resumeEditing which:#modify
	)
	on NumberOfSlices changed NewValue do
	(
		if selection.count == 1 then
		(
			if Preview.state == on do
			(
				--max create mode
				suspendEditing which:#modify
				bUseDistance = False
				DeleteSlices()
				SliceMesh Axis:SliceAxis UseDistance:bUseDistance
				--max modify mode
				resumeEditing which:#modify
				--completeRedraw()
			)
		)
	)
	on DistanceBetweenSlices changed NewValue do
	(
		if selection.count == 1 then
		(
			if Preview.state == on do
			(
				suspendEditing which:#modify
				bUseDistance = True
				DeleteSlices()
				SliceMesh Axis:SliceAxis UseDistance:bUseDistance
				resumeEditing which:#modify
				--completeRedraw()
			)
		)
	)
	on X_Button pressed do
	(
		SliceAxis = #X
		if Preview.state == on do
		(
			suspendEditing which:#modify
			DeleteSlices()
			SliceMesh Axis:SliceAxis UseDistance:bUseDistance
			resumeEditing which:#modify
		)
	)
	on Y_Button pressed do
	(
		SliceAxis = #Y
		if Preview.state == on do
		(
			suspendEditing which:#modify
			DeleteSlices()
			SliceMesh Axis:SliceAxis UseDistance:bUseDistance
			resumeEditing which:#modify
		)
	)
	on Z_Button pressed do
	(
		SliceAxis = #Z
		if Preview.state == on do
		(
			suspendEditing which:#modify
			DeleteSlices()
			SliceMesh Axis:SliceAxis UseDistance:bUseDistance
			resumeEditing which:#modify
		)
	)
	on preview changed PreviewState do
	(
		--Preview.HighlightColor = [random 0 255, random 0 255, random 0 255]
		if PreviewState == on then
		(
			if selection.count == 1 then
			(
				suspendEditing which:#modify
				SliceMesh Axis:SliceAxis UseDistance:bUseDistance
				completeRedraw()
				Accept.enabled = true
				resumeEditing which:#modify
			)
			else
			(
				if selection.count == 0 then
				(
					MessageBox "Selection is empty ! :o"
					Preview.state = off
				)
				else
				(
					MessageBox "Please select only one object ;)"
					Preview.state = off
				)
			)
		)
		else
		(
			suspendEditing which:#modify
			DeleteSlices()
			Accept.enabled = false
			resumeEditing which:#modify
		)
	)
	on Accept pressed do
	(
		if selection.count == 1 then
		(
			if Split_Mesh.checked do
			(
				for i in mySliceModifiers do
				(
					i.Slice_Type = 1
				)
			)
			if Collapse_Stack.checked then
			(
				free mySliceModifiers
				collapseStack $
				Preview.state = off
				Accept.enabled = false
			)
			else
			(
				free mySliceModifiers
				addmodifier $ (Edit_Poly())
				Preview.state = off
				Accept.enabled = false
			)
		)
		else
		(
			MessageBox "Selection is empty ! :o"
		)
	)
	
	rollout AboutRollout "About" width:424 height:248
	(
		
		local img_logo_01 = "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"
		local img_logo_02 = ""
		local ConvertClass = dotNetClass "System.Convert"
		local ImageClass = dotNetClass "System.Drawing.Image"
		local Img01
		local Img02
		
		label lbl01 "		                  Slice Tool v1.2.2 - 08/03/2019\n		        Dev by Benjamin Boscher aka N00BYZOR\n		          Free for all use and / or modifications.\n    If you modify the script please mention my name or my nickname (or both ^^).\n				      Cheers :)" pos:[8,8] width:408 height:88
		dotNetControl N00BYButton "system.Windows.Forms.Button" pos:[130,120] width:150 height:76
		label lbl02 "You can find my other scripts on" pos:[64,216] width:160 height:13
		HyperLink ScriptSpotLink "my Scriptspot account" pos:[224,216] width:120 height:15 color:(color 0 221 241) hovercolor:(color 0 255 0) visitedcolor:(color 0 221 241) address:"http://www.scriptspot.com/3ds-max/scripts?search=n00byzor&date%5Bvalue%5D%5Byear%5D="
		label lbl6 "My portfolio:" pos:[176,96] width:72 height:16
		
		fn StringToImage str = -- http://lonerobot.net/
		(
			byteArr = ConvertClass.FromBase64String str
			memstream = dotnetobject "System.IO.MemoryStream" byteArr
			DecodedImg = ImageClass.fromstream memstream
			memstream.close() ; return DecodedImg
		)
		
		
		on AboutRollout open do
		(
			Img01 = (StringToImage img_logo_01)
			Img02 = (StringToImage img_logo_02)
			N00BYButton.image = Img01
		)
		on N00BYButton mouseEnter senderArg arg do
		(
			senderArg.image = Img02
		)
		on N00BYButton mouseLeave senderArg arg do
		(
			N00BYButton.image =  Img01
		)
		on N00BYButton click do
		(
			ShellLaunch "https://www.artstation.com/artist/n00byzor" ""
		)
	)
	on AboutButton pressed do
	(
		try(destroyDialog AboutRollout)catch()
		CreateDialog AboutRollout
	)
)
CreateDialog SliceToolRollout style:#(#style_titlebar, #style_sysmenu, #style_toolwindow) --bgColor:[random 0 255, random 0 255, random 0 255]