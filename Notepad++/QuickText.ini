[0]
LANGUAGE_NAME=TXT
[1]
!=<!--$-->
LANGUAGE_NAME=PHP
a=<?= anchor('$', '$'); ?>
ado=<audio src="$"></audio>
audio=<audio src="$"></audio>
b=<b>$</b>$
black=#000000
blue=#0000FF
body=<body>\n	$\n</body>\n$
br=<br />\n$
button=<button onclick="$()">$</button>
c='.\$$.'$
case=case '$':\n	$\nbreak;
ce=var $ = document.createElement('$');
ciass=\$data['$']	= \$this->lang->line('$');
cic=class $ extends Controller {\n\n    function __construct() {\n        parent::Controller();\n    }\n\n    function index() {\n        $\n    }\n\n}
cicset=\$this->config->set_item('$', '$')
cid=\$data['$'] = $;
ciemail=\$msg = $;\n\n\$this->email->from('$', '$');\n\$this->email->to('$');\n\$this->email->subject('$');\n\$this->email->message(\$msg);\n\$this->email->send();
ciform=<?= form_open('$'); ?>\n    $\n<?= form_close(); ?>
ciget=\$$ = \$this->request->get[''];
cigitem=\$this->config->item('$')
cilang=\$this->lang->line('$')
cim=class $_m extends Model {\n\n    function __construct() {\n        parent::Model();\n    }\n\n    $\n\n}
cip=<?php if (!defined('BASEPATH')) exit('No direct script access allowed');\n\n$\n\n?>
cipo=\$$ = \$this->request->post[''];
cisess=\$this->session->set_userdata($);
cisget=\$$ = \$this->session->userdata['$'];
cisset=\$this->session->set_userdata('$);
ciupload=\$config['upload_path'] = '$';\n\$config['allowed_types'] = '$';\n\$this->load->library('upload', '\$config');\n\nif ($this->upload->do_upload()) {\n    $\n} else {\n    $\n}
co=console.log( $ );
comment=<!-- $ -->\n$
cook=\$$=\$_COOKIE['$'];
css=<link rel="stylesheet" type="text/css" href="$.css" />
curl=\$url = 'http://$';\n\$data = '$=$';\n\$request = curl_init(\$url);\ncurl_setopt(\$request, CURLOPT_HEADER, 0);\ncurl_setopt(\$request, CURLOPT_RETURNTRANSFER, 1);\ncurl_setopt(\$request, CURLOPT_POSTFIELDS, \$data);\ncurl_setopt(\$request, CURLOPT_SSL_VERIFYPEER, FALSE);\n\$response = curl_exec(\$request);\ncurl_close(\$request);
cv='.\$$.'$
cyan=#00FFFF
dbase=base_path()
dbc=@mysql_connect("localhost","root","") or die("Unable to connect");\n@mysql_select_db("$") or die( "Unable to select database");
dbcount=\$this->db->count_all('$');
dbdelete=\$this->db->delete('$', array($));
dbfrom=\$this->db->from('$');
dbget=\$this->db->get('$');
dbgetwhere=\$this->db->getwhere('$', array($));
dbgroup=\$this->db->groupby(array($));
dbhaving=\$this->db->having(array($));
dbinsert=\$insert = array($);\n\n\$this->db->insert('$', \$insert);
dbjoin=\$this->db->join('$', '$');
dblike=\$this->db->like(array($));
dblimit=\$this->db->limit($);
dborder=\$this->db->orderby('$');
dborlike=\$this->db->orlike(array($));
dborwhere=\$this->db->orwhere(array($));
dbquery=\$sql = "$";\n\$result =\$db->query(\$sql);\nif (DB::isError(\$result)) {\n	echo \$sql;\n	    die(\$result->getMessage());        \n	}
dbresult=\$arr = array();\n	while (\$row =\n\$result->fetchRow(DB_FETCHMODE_ASSOC)){\n    \$arr[] = \$row;\n	}\n$
dbselect=\$this->db->select('$');
dbset=\$this->db->set(array($));
dbupdate=\$update = array($);\n\n\$this->db->update('$', \$update);
dbwhere=\$this->db->where('$', array($));
dcss=drupal_add_css(drupal_get_path('module', '$').'/$.css');
dd=<dd>\n	$\n</dd>
decho=<?php echo t('$');?>
deco=echo t('$');
def=define('$',$);
default=default $: $\n$
dfetch=if(\$result->num_rows>0){\n	while(\$row=db_fetch_object(\$result)){\n	$\n	}\n}
dform= function $_form() {\n	\$form['submit'] = array(\n      '#type'       => 'submit',\n      '#value'      => t('Save')\n	);\n  return \$form;\n}\nfunction $_form_submit(\$form, &\$form_state) {\n    \n}
dget=\$q = \$_GET['q'];\n\$q = explode('/',\$q);\n\$id = \$q[sizeof(\$q)-1];
dgetform=drupal_get_form('$');
dgo=drupal_goto('$');
dgoto=if(\$$){\n	drupal_set_message(t('Successfully saved'),'status');\n}else{\n	drupal_set_message(t('Sorry! An error occured. Please try again.'),'warning');\n}\ndrupal_goto('$');
di=<div $></div>
dinput=\$form['$'] = array(\n	'#title' => t('$'),\n	'#description' => t('$'),\n	'#type' => '$',\n	'#default_value' => '$',\n	);
ditem=\$items['$'] = array(\n    'title' => t('$'),\n    'description' => t('$'),\n    'page callback' => '$',\n    'access arguments' => array('view $'),\n    'type' => MENU_CALLBACK,\n   );
divc=<div class="$">\n	$\n</div>
divi=<div id="$">\n	$\n</div>
divs=<div style="$">\n	$\n</div>
djs=drupal_add_js(drupal_get_path('module', '$').'/$.js');
dl=<dl>\n	<dt>\n	$\n	</dt>\n	<dd>\n	$\n	</dd>\n</dl>
dlink=l(t('$'),'$');
dmail=\$message = array(\n	'to' => \$$,\n	'subject' => t('$'),\n	'body' => '$',\n	'headers' => array('From' => '$@.com'),\n	'MIME-Version' => '1.0',\n	'Content-Type' => 'text/html; charset=UTF-8; format=flowed',\n	'Content-Transfer-Encoding' => '8Bit',\n	'X-Mailer' => 'Drupal'\n	);\ndrupal_mail_send(\$message);
dmenu=function $_menu() {\n  \$items = array();    \n  \$items['$'] = array(\n    'title' => t('$'),\n    'description' => t('$'),\n    'page callback' => '$',\n    'access arguments' => array('view $'),\n    'type' => MENU_CALLBACK,\n   );   \n  return \$items;\n}
dmsg=drupal_set_message(t('$'),'status');
docid=document.getElementById('$');
docroot=\$doc_root = \$_SERVER['DOCUMENT_ROOT'];\n
done=\$sql = "SELECT * FROM {$}";\n\$result = db_query(\$sql);\n\$row=db_fetch_object(\$result);
dout=\$output .= $;
dowhile=do\n{\n	$\n}\nwhile ($);\n$
dowhiles=do\n	$\nwhile ($);\n$
dpo=\$$ = \$form_state['values']['$'];
dpq=\$sql = "SELECT * FROM {$}";\n\$result = pager_query(\$sql,$);\n$output .= theme('pager');
dprice=array('data'=>number_format(\$$,2),'style'=>'text-align:right;')
dq=\$sql = " $ ";\n\$result = db_query(\$sql);
dres=\$sql = "SELECT $ FROM {$}";\n\$$ = db_result(db_query(\$sql));
dscript=drupal_add_js(drupal_get_path('module', '$').'/$.js');
dt=<dt>\n	$\n</dt>
dtable=\$headers=array(t('$'),t('$'));\n\$output = theme('table',\$headers,\$rows);
dtf=t('$')
duid=global \$user;\n\$uid = \$user->uid;\nif(\$uid==0){\n	drupal_goto('user/login');\n}
dupload=function $_form() {\n	\$form['#attributes'] = array('enctype' => 'multipart/form-data');\n	\$form['file'] = array(\n		'#title' => t('File'),\n		'#description' => t('Upload file'),\n		'#type' => 'file',\n		'#default_value' => '',\n		);\n	\$form['submit'] = array(\n      '#type'       => 'submit',\n      '#value'      => t('Upload')\n	);\n  return \$form;\n}\nfunction $_form_submit(\$form, &\$form_state) {\n	\$validators = array(\n            'file_validate_extensions' => array('jpg')\n        );\n    \$file = \$_FILES['files'];	\n	if(\$file){		\n		if(\$file = file_save_upload('file', \$validators, file_directory_path(), FALSE)) {\n			drupal_set_message(t('File successfully upload.'),'status');\n		}else{\n			drupal_set_message(t('Failed to upload.'),'warning');\n		}\n	}\n}
dvget=\$$ = variable_get('$','$');
e=echo '$';
echo=echo "<br />The value is ".\$$;
efblock=<div class="block">\n	<div class="blockContents">\n	  <div class="title" >$</div>\n	  <span class="subtitle"></span>\n	  <span style="display:none">&nbsp;</span>\n		<div class="content" >\n			$\n		</div>\n	</div>\n</div>	
efdel=eF_deleteTableData("$", "id=".\$$id);
efinsert=\$$ = array(\n					'$'=>\$_POST['$'],\n				);\n		eF_insertTableData("$", \$$);
efq=\$$ = eF_getTableData("$", "*" );
efupdate=\$$ = array(\n					'$'=>\$_POST['$'],\n				);\n		eF_updateTableData("$", \$$);
else=else\n{\n	$\n}\n$
elseif=else if ($)\n{\n	$\n}\n$
elseifs=else if ($)\n	$\n$
elses=else\n	$\n$
email=\$headers  = 'MIME-Version: 1.0' . "\rn";\n\$headers .= 'Content-type: text/html; charset=utf-8' . "\rn";\nmail(\$mail,\$subject,\$body,\$headers);
extcombo=new Ext.form.ComboBox({\nstore: new Ext.data.Store({\nproxy: new Ext.data.HttpProxy({url: '$.php'}),\nreader:	new Ext.data.JsonReader({id: 1},\n[\n{name: 'id'},\n{name: '$'},\n])\n}),\ndisplayField:'$',\nvalueField:'$id',\nhiddenName: '$',\ntypeAhead: true,\ntriggerAction: 'all',\nemptyText:'Select...',\nselectOnFocus:true\n});\n
extconn=var c = new Ext.data.Connection;\n	c.request({\n			method: 'GET', \n			url: '$.php?'+param,\n			callback: doResponse,\n			waitMsg: 'Please wait ....'\n			});\n		};\n\n	doResponse = function (object, success, response){\n		if(success) {\n				Ext.Msg.alert('Success','$');\n				}else{				\n				Ext.Msg.alert('Error','Failed! Please try again.');\n			}\n	}
extform=new Ext.FormPanel({\n	labelWidth: 75,\n	frame: true,\n	url: '$',\n	title: '$',\n	items: [\n	],\n	buttons: [{\n				text: '$',\n						handler:function(){\n							}\n		}]\n	});\n
extformsubmit=$.form.submit({\n			waitMsg: 'Please wait whilesaving.......',\n			success: function(){\n				Ext.Msg.alert('Information','Successfully saved.');\n			},\n			failure: function(){\n			Ext.Msg.alert('Error','Error while saving.');\n			}\n		});\n
extready=Ext.onReady(function(){\n\n});
f=function $($) {\n    $\n}
f_=function _$($) {\n    $\n}
fetch=if(\$result){\n	while(\$row = @mysql_fetch_object(\$result))	{\n	$\n	}\n}
footr=<footer>$</footer>
for=for(\$i=0;\$i<$;\$i++){\n$\n}
foreach=foreach ($ as $) {\n    $\n}
form=<form action="$.php" method="post">\n	<input type="$" name="$" />\n	<input type="submit" />\n</form>\n$
formm=<?= form_open_multipart('$'); ?>\n    $\n<?= form_close(); ?>
get=\$$=\$_GET['$'];
green=#00FF00
grey=#C0C0C0
h1=<h1>$</h1>\n$
h2=<h2>$</h2>\n$
h3=<h3>$</h3>\n$
h4=<h4>$</h4>\n$
h5=<h5>$</h5>\n$
h6=<h6>$</h6>\n$
head=<head>\n	$\n</head>\n$
header=<header>$</header>
headr=<header>$</header>
hr=<hr />$
ht=<!DOCTYPE HTML>\n<HTML>\n	<HEAD>\n		<META CHARSET="UTF-8">\n		<link href="skripty/style.css" type="text/css" rel="stylesheet"/>\n		<script src="skripty/jquery.min.js" charset="UTF-8" type="text/javascript"></script>\n	</HEAD>	\n\n	<BODY>\n		$\n	</BODY>\n</HTML>
i=<i>$</i>$
if=if ($) {\n    $\n}
ifelse=if ($) {\n    $\n} else {\n    $\n}
ifelseif=if ($) {\n    $\n} elseif ($) {\n    $\n} else {\n    $\n}
ifelses=if ($)\n{\n	$\n}\nelse\n	$\n$
ifs=if ($)\n	$\n$
ifselse=if ($)\n	$\nelse\n{\n	$\n}\n$
ifselses=if ($)\n	$\nelse\n	$\n$
im=<img>$</img>
img=<img src="$" alt="$" />\n$
init=require('init.php');\n$
input=<input type="$" name="$" />
insert=INSERT INTO $ ($) VALUES('$');
jass=\$this->assignRef('$',\$$);
jbase=<?php echo JURI::base();?>
jeditor=\$editor =& JFactory::getEditor();\n			echo \$editor->display('text', '', '100%', '400', '70', '15');?>
jexec=defined('_JEXEC') or die('Restricted access');
jfetch=\$result = \$db->loadObjectList();
jimp=jimport('joomla.application.component.$');
jparam=\$params->get('$',$);
jq=\$db = & JFactory::getDBO();\n\$query = "SELECT * FROM #__$";\n\$db->setQuery(\$query);
jqajax=\$.ajax({\n   type: "POST",\n   url: "$.php",\n   data: "$",\n   success: function(msg){\n$\n} \n});
jqconf=jQuery.noConflict();
jqready=\$(document).ready(function() {\n$\n});
jtmpl=<?php echo \$this->baseurl; ?>/templates/<?php echo \$this->template; ?>/
label=<label for="$">$<label>
li=<li>$</li>\n$
link=<a href="$">$</a>$
literal={literal}\n\n{/literal}
loadconfig=\$this->load->config('$');
loadhelper=\$this->load->helper('$');
loadlang=\$this->load->lang('$');
loadlib=\$this->load->library('$');
loadplugin=\$this->load->plugin('$');
loadview=\$this->load->view('$');
log=console.log($);
loop=for(\$i=0;\$i<\$num;\$i++)\n{\n\$$=mysql_result(\$result,\$i,'$');\n}
magget=\$$=\$this->getRequest()->getParam($)
magmodel=\$$ = Mage::getModel('$');
magq=\$sql = "SELECT * FROM $";\n		\$resource = Mage::getSingleton('core/resource');\n		\$read= \$resource->getConnection('core_read');\n		\$arr = \$read->fetchAll($sql);
mail=\$headers  = 'MIME-Version: 1.0' . "\rn";\n\$headers .= 'Content-type: text/html; charset=utf-8' . "\rn";\nmail(\$mail,\$subject,\$body,\$headers);
mangenta=#FF00FF
md5=\$this->security->dohash('$', 'md5');
mooajax=var url='$.php';\nnew Ajax(url, {method: 'get', onComplete: function(response){\n\n}}).request();
mooready=window.addEvent('domready', function() {\n\n});
n=\$num = mysql_num_rows(\$result);\n$
nav=<nav>$</nav>
nbsp=&nbsp;
num=\$num = \$result->numRows();
oclg=\$$ = \$this->language->get('$');
ocll=\$this->load->language('$');
ocq=\$sql = "";\n\$result = \$this->db->query(\$sql);\nif(\$result->num_rows>0){\n$\n}
ol=<ol>\n	<li>$</li>\n	$\n</ol>\n$
option=<option>$</option>
p=<p>$</p>\n$
p?=<?= $; ?>
pe=<?php echo $;?>
php=<?php\n	$\n?>
pisgod=\$canIhaveAccess = 0;\n    \$canIhaveAccess = \$canIhaveAccess + checklevel('god');\n    if(\$canIhaveAccess == 1) {\n	$\n}
po=\$$=\$_POST['$'];
post=\$this->input->post('$');
pr=echo '<pre>';\nprint_r(\$$);\necho '</pre>';
pre=<pre>$</pre>\n$
psmass=\$main_smarty->assign('$',\$$);
purl=my_base_url.my_pligg_base
q=\$sql = "SELECT * FROM $";\n\$result = mysql_query(\$sql) or die(\$sql.'<br />'.mysql_error());\n$
r=redirect('$');
rc=resources/css/$
red=#FF0000
req=\$$ = \$_REQUEST['$'];
res=\$$=mysql_result(\$result,\$i,'$');\n$
ri=resources/includes/$
rimg=resources/images/$
rj=resources/js/$
rndbox=<div class="boxtop"><div><div class="tbg"></div></div></div><div class="boxrbg"><div class="boxlbg"><div class="boxwrap">\n$\n</div></div></div><div class="boxbot"><div><div class="bbg"></div></div></div>
rndcss=.boxtop, .boxtop div {\n    height: 8px;\n    font-size: 1px;\n}\n.boxbot div,\n.boxbot{\n    height: 8px;\n    font-size: 1px;\n}\n.boxtop {\n    background: url(images/boxtright.gif) no-repeat top right;\n}\n.boxtop div {\n    background: url(images/boxtleft.gif) no-repeat top left;\n}\n.boxtop .tbg {\n    margin:0px 8px;\n    background: url(images/boxtbg.gif) repeat-x top right;\n}\n.boxbot .bbg {\n   \n margin:0 8px;\n    background: url(images/boxbbg.gif) repeat-x bottom;\n}\n.boxbot div {\n    background: url(images/boxbleft.gif) no-repeat bottom left;\n}\n.boxbot {\n    background: url(images/boxbright.gif) no-repeat bottom right;\n}\n\n.boxrbg {\n    background: url(images/boxrbg.gif) repeat-y top right;\n}\n.boxlbg {\n    background: url(images/boxlbg.gif) repeat-y top left;\n}\n.boxwrap {\n    margin:0pt 8px;\n    padding:5px 8px;\n    background: #F9F7ED;\n}\n
rq=resources/query/$
rs=resources/sitefiles/$
sc=<script type="text/javascript">\n$\n</script>
scli=<script type="text/javascript" src="$" ></script>\n
sdata=\$this->input->session('$');
sec=<section>$</section>
select=<select name="$">\n	<option>$</option>\n$\n</select>
sess=\$$ = \$_SESSION['$'];
sfcss=<?php echo stylesheet_tag('$);?>
sfdfall=\$sql="SELECT * FROM $";\n\$con = Doctrine_Manager::getInstance()->connection();\n\$ = \$con->fetchAll(\$sql);
sfdfetch=\$q = Doctrine_Query::create()\n	->select('*')\n	->from('$')\n	->where('$ = ?',$);\n\$$=\$q->fetchArray();
sfdq=\$sql="$";\n\$con = Doctrine_Manager::getInstance()->connection();\n\$st = \$con->execute(\$sql);
sfecho=<?php echo __('$');?>
sfeco=echo __('$');
sfexec=public function execute$(sfWebRequest \$request){\n}
sffetch=while(\$resultSet->next()){\n \$$=\$resultSet->getString('$');\n}
sfget=\$$=\$sf_request->getParameter('$');
sfimg=<?php echo image_tag('$');?>
sfjs=<?php echo javascript_include_tag('$');?>
sflink=<?php echo link_to('$');?>
sfparam=\$$=\$this->getRequestParameter('$');
sfpo=\$$ = \$request->getParameter('$');
sfq=\$connection = Propel::getConnection();\n\$sql = "SELECT * FROM $";\n\$stmt = \$connection->prepareStatement(\$sql);\n\$resultSet = \$stmt->executeQuery();
sfred=\$this->redirect('$\$);
sfselect=\$c = new Criteria();\n\$c->add($Peer::ID,\$id);\n\$this->$=$Peer::doSelect(\$c);
sfset=sfContext::getInstance()->getRequest()->setParameter('$', $); 
sfupload=<?php\n echo form_tag('media/upload','multipart=true');\n echo input_file_tag('file'); echo submit_tag('Send');?></form>\n\n\n \$fileName = \$this->getRequest()->getFileName('file');\n \$this->getRequest()->moveFile('file',sfConfig::get('sf_upload_dir'.'/'.\$fileName));
sha1=\$this->security->dohash('$');
smass=\$smarty->assign('$',\$$);
span=<span>$</span>$
ssetdata=\$this->session->set_userdata(array($));
style=<style type="text/css">\n$\n</style>
switch=switch(\$$) {\n	case '$':\n	$\nbreak;$\ndefault:\n$\n}
table=<table>\n	<tr>\n		<td>$</td>\n		$\n	</tr>\n	$\n</table>\n$
td=<td>$</td>\n$
textarea=<textarea name="$">$</textarea>
th=<th>$</th>
thead=<thead>\n	<tr>\n		<th>$</th>\n	</tr>\n</thead>
timeout=setTimeout('$()',100);
title=<title>$</title>\n$
tr=<tr>\n	$\n</tr>\n$
ul=<ul>\n	<li>$</li>\n	$\n</ul>\n$
update=UPDATE $ SET $=$
upload=<form action="" method="post" enctype="multipart/form-data">\n	<input type="file" name="image" />\n	<input type="submit" name="" value="upload"/>	\n</form>\n<?\n	\$uploadfile = 'up/';\n	\$tmp = \$_FILES['image']['tmp_name'];\n	\$file_name = \$_FILES['image']['name'];\n	move_uploaded_file(\$tmp, \$uploadfile.\$file_name);\n?>
v='\$$' 
val=if (\$this->validation->run()) {\n    $\n} else {\n    $\n}
valfield=\$fields['$'] = '$';
valrule=\$rules['$'] = '$';
valsetfields=\$this->validation->set_fields(\$fields);
valsetrule=\$this->validation->set_rules(\$rules);
vdo=<video src="$"></video>
video=<video src="$"></video>
while=while ($) {\n    $\n} 
whiles=while ($)\n	$\n$
white=#FFFFFF
wpq=\$sql = "SELECT * FROM ".\$wpdb->prefix."$";\n\$result = \$wpdb->query(\$sql);
yellow=#FFFF00
[10]
LANGUAGE_NAME=MAKEFILE
[11]
LANGUAGE_NAME=PASCAL
[12]
LANGUAGE_NAME=BATCH
[13]
LANGUAGE_NAME=INI
[14]
LANGUAGE_NAME=NFO
[15]
(=( $ )
b=\n(\n	$\n)\n
fn=fn $ =\n(\n\n)
[16]
LANGUAGE_NAME=ASP
[17]
LANGUAGE_NAME=SQL
[18]
LANGUAGE_NAME=VB
[19]
LANGUAGE_NAME=JS
bo=	<BODY>\n		$\n	</BODY>
ce=var $ = document.createElement('$');
co=console.log( $ );
di=	<div>\n		$\n	</div>
docid=document.getElementById('$');
extcombo=new Ext.form.ComboBox({\nstore: new Ext.data.Store({\nproxy: new Ext.data.HttpProxy({url: '$.php'}),\nreader:	new Ext.data.JsonReader({id: 1},\n[\n{name: 'id'},\n{name: '$'},\n])\n}),\nfieldLabel:'$',\ndisplayField:'$',\nvalueField:'$id',\nhiddenName: '$',\ntypeAhead: true,\ntriggerAction: 'all',\nemptyText:'Select...',\nselectOnFocus:true\n});\n
extconn=var c = new Ext.data.Connection;\n	c.request({\n			method: 'GET', \n			url: '$.php?'+param,\n			callback: doResponse,\n			waitMsg: 'Please wait ....'\n			});\n		};\n\n	doResponse = function (object, success, response){\n		if(success) {\n				Ext.Msg.alert('Success','$');\n				}else{				\n				Ext.Msg.alert('Error','Failed! Please try again.');\n			}\n	}
extform=new Ext.FormPanel({\n	labelWidth: 75,\n	frame: true,\n	url: '$',\n	title: '$',\n	items: [\n	],\n	buttons: [{\n				text: '$',\n						handler:function(){\n							}\n		}]\n	});\n
extformsubmit=$.form.submit({\n			waitMsg: 'Please wait whilesaving.......',\n			success: function(){\n				Ext.Msg.alert('Information','Successfully saved.');\n			},\n			failure: function(){\n			Ext.Msg.alert('Error','Error while saving.');\n			}\n		});\n
extready=Ext.onReady(function(){\n\n});
f=function $($)\n{\n    $\n}
for=for (var i = 0; i < $; ++i)\n{\n	$\n}
for.ml=for (var i = 0; i < $; ++i)\n{\n	$\n}
for.sl=for (var i = 0; i < $; ++i)\n	$
foreach=for (var x in $)\n{\n	$\n}
foreach.ml=for (var x in $)\n{\n	$\n}
foreach.sl=for (var x in $)\n	$
foreachsl=for (var x in $)\n	$
forsl=for (var i = 0; i < $; ++i)\n	$
fu=function $ ()\n{\n	$\n}
he=	<HEAD>\n		<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />\n		<meta http-equiv="Content-language" content="cs">\n		<TITLE>$</TITLE>\n		<script language="JavaScript" type="text/javascript" src="../../scripts/functionlist.js"></script>\n	</HEAD>
ht=<HTML xmlns="http://www.w3.org/1999/xhtml">	\n	<HEAD>\n		<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />\n		<meta http-equiv="Content-language" content="cs">\n		<TITLE>$</TITLE>\n		<script language="JavaScript" type="text/javascript" src="../../scripts/webmenu.js"></script>\n		<script language="JavaScript" type="text/javascript" src="../../scripts/functionlist.js"></script>\n	</HEAD>\n\n	<BODY>\n		$\n	</BODY>\n</HTM>	
jqajax=\$.ajax({\n   type: "POST",\n   url: "$.php",\n   data: "$",\n   success: function(msg){\n$\n} \n});
jqconf=jQuery.noConflict();
jqready=\$(document).ready(function() {\n$\n});
log=console.log($);
mooajax=var url='$.php';\nnew Ajax(url, {method: 'get', onComplete: function(response){\n\n}}).request();
mooready=window.addEvent('domready', function() {\n\n});
p=	<p>$</p>
po=pos = {x:$,y:$}
sc=<script type="text/javascript">\n	$\n</script>
st=<style type="text/css">\n	$\n</style>
timeout=setTimeout('$()',100);
[2]
LANGUAGE_NAME=C
case=case $: $\n$
def=#define $\n$
default=default $: $\n$
dowhile=do\n{\n	$\n}\nwhile ($);\n$
dowhiles=do\n	$\nwhile ($);\n$
else=else\n{\n	$\n}\n$
elseif=else if ($)\n{\n	$\n}\n$
elseifs=else if ($)\n	$\n$
elses=else\n	$\n$
for=for ($;$;$)\n{\n	$\n}\n$
fors=for ($;$;$)\n	$\n$
func=$ $($)\n{\n	$\n	return $;\n}\n$
if=if ($)\n{\n	$\n}\n$
ifelse=if ($)\n{\n	$\n}\nelse\n{\n	$\n}\n$
ifelses=if ($)\n{\n	$\n}\nelse\n	$\n$
ifs=if ($)\n	$\n$
ifselse=if ($)\n	$\nelse\n{\n	$\n}\n$
ifselses=if ($)\n	$\nelse\n	$\n$
inc=#include <$>\n$
incl=#include "$"\n$
main=int main(int argc, char* argv[])\n{\n	$\n}\n
switch=switch ($)\n{\n	case $:\nbreak;\n                $\n}\n$
while=while ($)\n{\n	$\n}\n$
whiles=while ($)\n	$\n$
[20]
LANGUAGE_NAME=CSS
[21]
LANGUAGE_NAME=PERL
[22]
LANGUAGE_NAME=PYTHON
[23]
LANGUAGE_NAME=LUA
[24]
LANGUAGE_NAME=TEX
[25]
LANGUAGE_NAME=FORTRAN
[255]
a-id=<a id="$" href="$">$</a>
b=<b>$</b>
body=<body>\n	$\n</body>\n$
body-id=<body id="$">\n	$\n</body>\n$
br=<br />
color.black=#000000
color.blue=#0000FF
color.cyan=#00FFFF
color.green=#00FF00
color.grey=#C0C0C0
color.mangenta=#FF00FF
color.white=#FFFFFF
color.yellow=#FFFF00
comment=<!-- $ -->\n$
div-class=<div class="$">\n</div>
div-id=<div id="$">\n</div>
div-id-class=<div id="$" class="$">\n	$\n</div>
div.p=<div class="p">\n	$\n</div>
doctype.html.4.loose=<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"\n	"http://www.w3.org/TR/html4/loose.dtd">
doctype.html.4.strict=<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"\n	"http://www.w3.org/TR/html4/strict.dtd">
doctype.xhtml.1.0.loose=<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"\n	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
doctype.xhtml.1.0.strict=<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"\n	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
doctype.xhtml.1.1=<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"\n	"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
fieldset=<fieldset class="$">\n	$\n</fieldset>
form=<form name="$" action="$">\n	$\n</form>\n$
green=#00FF00
grey=#C0C0C0
h1=<h1>$</h1>\n$
h2=<h2>$</h2>\n$
h3=<h3>$</h3>\n$
h4=<h4>$</h4>\n$
h5=<h5>$</h5>\n$
h6=<h6>$</h6>\n$
head=<head>\n	$\n</head>\n$
html=<html>\n	<head>\n		<title>$</title>\n		$\n	</head>\n	<body>\n		$\n	</body>\n</html>\n$
i=<i>$</i>$
img=<img src="$" alt="$" />\n$
input=<input type="$" name="$" />\n$
label=<label for="$">$<label>
li=<li>$</li>\n$
link=<a href="$">$</a>$
mangenta=#FF00FF
ol=<ol>\n	<li>$</li>\n	$\n</ol>\n$
option=<option>$</option>
p=<p>$</p>\n$
pre=<pre>$</pre>\n$
rc=resources/css/$
red=#FF0000
ri=resources/includes/$
rimg=resources/images/$
rj=resources/js/$
rq=resources/query/$
rs=resources/sitefiles/$
script=<script type="text/javascript">\n$\n</script>
scriptsrc=<script type="text/javascript" src="$" ></script>\n
select=<select name="$">\n<option>$</option>\n$\n</select>
span=<span>$</span>$
style=<style type="text/css">\n$\n</style>
table=<table>\n	<tr>\n		<td>$</td>\n		$\n	</tr>\n	$\n</table>\n$
td=<td>$</td>\n$
title=<title>$</title>\n$
tr=\n<tr>\n	$\n</tr>
ul=<ul>\n	<li>$</li>\n</ul>
url=http://
www=http://www.
[26]
LANGUAGE_NAME=BASH
[27]
LANGUAGE_NAME=FLASH
[28]
LANGUAGE_NAME=NSIS
[29]
LANGUAGE_NAME=TCL
else=} else {\n $
foreach=foreach $ $ {\n $\n}\n$
if=if { $ } {\n $\n}\n$
ifelse=if { $ }\n $\n} else {\n $\n}
proc=# $\nproc $ { $ } {\n $\n}\n$
regsub=regsub -all {$} "$" {$} $\n$
[3]
LANGUAGE_NAME=CPP
case=case $: $\n$
class=class $ {\nprivate:\n	$\nprotected:\n	$\npublic:\n	$\n};\n$
def=#define $\n$
default=default $: $\n$
dowhile=do\n{\n	$\n}\nwhile ($);\n$
dowhiles=do\n	$\nwhile ($);\n$
else=else\n{\n	$\n}\n$
elseif=else if ($)\n{\n	$\n}\n$
elseifs=else if ($)\n	$\n$
elses=else\n	$\n$
for=for ($;$;$)\n{\n	$\n}\n$
fors=for ($;$;$)\n	$\n$
func=$ $($)\n{\n	$\n	return $;\n}\n$
hclass=#ifndef $\n#define $\n\nclass $ {\nprivate:\n	$\nprotected:\n	$\npublic:\n	$\n};\n\n#endif\n$
if=if ($)\n{\n	$\n}\n$
ifelse=if ($)\n{\n	$\n}\nelse\n{\n	$\n}\n$
ifelses=if ($)\n{\n	$\n}\nelse\n	$\n$
ifs=if ($)\n	$\n$
ifselse=if ($)\n	$\nelse\n{\n	$\n}\n$
ifselses=if ($)\n	$\nelse\n	$\n$
inc=#include <$>\n$
incl=#include "$"\n$
main=int main(int argc, char* argv[])\n{\n	$\n}\n
switch=switch ($)\n{\n	$\n}\n$
while=while ($)\n{\n	$\n}\n$
whiles=while ($)\n	$\n$
[30]
LANGUAGE_NAME=LISP
[31]
LANGUAGE_NAME=SCHEME
[32]
LANGUAGE_NAME=ASM
[33]
LANGUAGE_NAME=DIFF
[34]
LANGUAGE_NAME=PROPS
[35]
LANGUAGE_NAME=PS
[36]
LANGUAGE_NAME=RUBY
[37]
LANGUAGE_NAME=SMALLTALK
[38]
LANGUAGE_NAME=VHDL
Ris=Rising_Edge ( $ )$
access=type $ is access $;\n$
alias=alias $ is $;\n$
archi=architecture $ of $ is\n$\nbegin\n$\nend $;\n$
array=type $ is\n array ( $ ) of $;\n$
assert=assert ( $ )\n report "$"\n sevrity $;\n$
block=$ : block $\nbegin\n $\nend block $;\n$
case=case $ is\n when $ =>\n $;\n when others =>\n $;\nend case;\n$
com=--\n-- $\n--
component=component $\n port (\n $\n );\nend component $;\n$
config=for $ : $\n use $\n $;\n$
constant=constant $: $;\n$
elsif=elsif ( $ ) then\n $;
entity=entity $ is\n port (\n $\n );\nend $;\n$
enum=type $ is ( $, $ );
exit=exit $ when $;\n$
file=file $ : $ is $;\n$
for=$ : for $ in $ downto $ loop\n $;\nend loop $;\n$
function=function (\n $\n )return $ is\n $\nbegin\n $\nend $;
functiond=function $ (\n $\n) return $;\n$
geneif=$ : if ( $ = $ ) generate\n $\nbegin\n $\nend generate $;
generate=$ : for $ in $ downto $ generate\n $\nbegin\n $\nend generate $;\n$
generic=generic (\n $\n );\n$
genmap=generic map (\n $\n)\n$
group=group $ is ( $ );\n$
ieee=library ieee;\n use ieee.std_logic_1164.all;\n $
if=if ( $ ) then\n $;\n$end if;\n$
ifelse=if ( $ ) then\n $\nelse\n $\nend if;\n$
ifelsif=if ( $ ) then\n $\nelsif ( $ )\n $\nend if;\n$
loop=$ : loop\n $\nend loop;\n$
map=$ : $\n port map (\n $\n );\n$
mapgen=$ : $\n generic map (\n $\n )\n port map (\n $\n );\n$
next=$ : next $ when $;\n$
numeric=use ieee.numeric_std.all;\n$
pack=package $ is\n $\nend package $;\n\npackage body $ is\n $\nend package body $;\n$
port=port (\n $\n );\n$
procedure=procedure $ (\n $\n ) is\n$\nbegin\n $\nend procedure $;\n$
procedured=procedure $ (\n $\n);\n$
process=$ : process ( $ )\nbegin\n $\nend process $;\n$
proclk=$ : process ( $, $ )\n begin\n if ( $ = '$' ) then\n $ <= $;\n elsif( Rising_Edge( $ ) ) then\n $\n end if;\nend process $;
protected=protected\n $\nend protected ;
record=type $ is\n record\n $ : $ ;\nend record $;\n$
start=library ieee;\n use ieee.std_logic_1164.all;\n\nentity $ is\n port (\n $\n );\nend $;\n\narchitecture $ of $ is\n$\nbegin\n$\nend $;\n$
std=signal $ : std_logic$;\n$
stdpi=$ : in std_logic;\n$
stdpio=$ : inout std_logic;\n$
stdpo=$ : out std_logic;\n$
stdtextio=use ieee.std_logic_textio.all;\n$
stdv=signal $ : std_logic_vector( $ downto 0);\n$
stdvar=variable $ : std_logic;\n$
stdvpi=$ : in std_logic_vector( $ downto $);\n$
stdvpio=$ : inout std_logic_vector( $ downto $);\n$
stdvpo=$ : out std_logic_vector( $ downto $);\n$
stdvvar=variable $ : std_logic_vector( $ downto 0);\n$
subtype=subtype $ is $;\n$
textio=use std.textio.all;\n$
units=units\n $;\nend units;\n$
waitf=wait for $;\n$
waitu=wait until $;\n$
waituf=wait until $ for $;\n$
when=when $ =>\n $;$
whene=when ( $ ) else $;
while=$ : while $ loop\n $;\nend loop;\n$
x=x"$"$
[39]
LANGUAGE_NAME=KIX
[4]
LANGUAGE_NAME=CS
[40]
LANGUAGE_NAME=AU3
[41]
LANGUAGE_NAME=CAML
[42]
LANGUAGE_NAME=ADA
[43]
LANGUAGE_NAME=VERILOG
[44]
LANGUAGE_NAME=MATLAB
[45]
LANGUAGE_NAME=HASKELL
[46]
LANGUAGE_NAME=INNO
[47]
LANGUAGE_NAME=SEARCHRESULT
[48]
LANGUAGE_NAME=CMAKE
[49]
LANGUAGE_NAME=YAML
[5]
LANGUAGE_NAME=OBJC
[50]
LANGUAGE_NAME=EXTERNAL
[6]
b=b="$";\n$
bb=b+="$";\n$
case=case $: $\n$
class=class $ {\nprivate:\n	$\nprotected:\n	$\npublic:\n	$\n};\n$
def=#define $\n$
default=default $: $\n$
dom=DocumentBuilderFactory fact = DocumentBuilderFactory.newInstance();\n        DocumentBuilder builder =fact.newDocumentBuilder();\n        Document doc = builder.parse("$");\n        Node root =doc.getDocumentElement();        		\n		NodeList children = root.getChildNodes();\n		for (int i = 0; i < children.getLength(); i++){\n			Node n = children.item(i);\n				//System.out.println(n.getNodeName());\n		}
dowhile=do\n{\n	$\n}\nwhile ($);\n$
dowhiles=do\n	$\nwhile ($);\n$
else=else\n{\n	$\n}\n$
elseif=else if ($)\n{\n	$\n}\n$
elseifs=else if ($)\n	$\n$
elses=else\n	$\n$
ff=writeFile(FileName,b);\nb="$";
for=for(int i=0;i<$;i++)\n{\n$\n}
fors=for ($;$;$)\n	$\n$
func=$ $($)\n{\n	$\n	return $;\n}\n$
hclass=#ifndef $\n#define $\n\nclass $ {\nprivate:\n	$\nprotected:\n	$\npublic:\n	$\n};\n\n#endif\n$
if=if ($)\n{\n	$\n}\n$
ifelse=if ($)\n{\n	$\n}\nelse\n{\n	$\n}\n$
ifelses=if ($)\n{\n	$\n}\nelse\n	$\n$
ifs=if ($)\n	$\n$
ifselse=if ($)\n	$\nelse\n{\n	$\n}\n$
ifselses=if ($)\n	$\nelse\n	$\n$
inc=#include <$>\n$
incl=#include "$"\n$
main=int main(int argc, char* argv[])\n{\n	$\n}\n
sout=System.out.println("$");
switch=switch ($)\n{\n	$\n}\n$
sys=System.out.println("$");
syst=System.out.println($);
try=try{\n$		\n		}\n		catch(Exception e)\n		{\n		$\n		}
while=while ($)\n{\n	$\n}\n$
whiles=while ($)\n	$\n$
[8]
!=<!-- $  -->
(=($)
LANGUAGE_NAME=HTML
bo=	<BODY>\n		$\n	</BODY>
bt=<P><input type="button" value="Text"  onClick="$ () " />
co=console.log( $ );
di=	<div>\n		$\n	</div>
fu=function $ ()\n{\n	$\n}
he=	<HEAD>\n		<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />\n		<meta http-equiv="Content-language" content="cs">\n		<TITLE>$</TITLE>\n		<script language="JavaScript" type="text/javascript" src="../../scripts/functionlist.js"></script>\n	</HEAD>
ht=<!DOCTYPE HTML>\n<HTML>\n	<HEAD>\n		<META CHARSET="UTF-8">\n		<link href="skripty/style.css" type="text/css" rel="stylesheet"/>\n		<script src="skripty/jquery.min.js" charset="UTF-8" type="text/javascript"></script>\n	</HEAD>	\n\n	<BODY>\n		$\n	</BODY>\n</HTML>
id=id="$"
ja="JavaScript" type="text/javascript" src="../../scripts/functions.js"></script>
la="Content-language" content="cs">
n=name="$"
p=	<p>$</p>
sc=<script type="text/javascript">\n	$\n</script>
st=<style type="text/css">\n	$\n</style>
[9]
LANGUAGE_NAME=XML
sflang=<trans-unit id="">\n	<source>$</source>\n	<target>$</target>\n</trans-unit>\n$
