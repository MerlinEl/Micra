<!DOCTYPE html PUBLIC "-//W3C//DTD W3 HTML//EN">
<html><head>

<meta content="text/html; charset=windows-1252" http-equiv="Content-Type"><title>KeyHH Readme</title>
<style>
<!--
    body    { background : white; color : black; margin: 20 }
    body    { font-family: "MS Sans Serif", "Arial", "sans-serif"}
    table   { font-family: "MS Sans Serif", "Arial", "sans-serif"}
	H1    { font-family: "MS Sans Serif", "Arial", "sans-serif"}
	H2    { font-family: "MS Sans Serif", "Arial", "sans-serif"}
	    
    div.Offscreen     { display:none }
    span.Offscreen    { display:none }
    span.BulletNumber { font-size: x-large; font-weight: bold; color: #66ccff }
    span.BulletText   { font-size: x-small; font-weight: bold; letter-spacing: -1pt; text-align:center}
//-->
</style>

<meta content="&quot;MSHTML 4.72.3110.7&quot;" name="GENERATOR">
</head>
<body link="#ff0000" vlink="#4e4e4e">
<h1>Welcome to KeyHH!</h1>
<h2>License to Use KeyHH</h2>
<p>First, let's get the legal stuff out of the way. :-)</p>
<p><font size="1" face="">BECAUSE THIS PROGRAM IS LICENSED FREE OF CHARGE, THERE 
IS NO WARRANTY FOR THIS PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. 
EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER 
PARTIES PROVIDE THE PROGRAM "AS IS'' WITHOUT WARRANTY OF ANY KIND, EITHER 
EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE 
QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE 
DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR 
CORRECTION.</font></p>
<p><font size="1" face="">IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED 
TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY REDISTRIBUTE 
THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY 
GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR 
INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA 
BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A 
FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER 
OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.</font></p>
<p>Whew! Now that we've taken care of that, let's talk about KeyHH.</p>
<h2>About KeyHH</h2>
<p>KeyHH is a program that augments HTML Help, the help development environment 
that Microsoft has created for its HTML-based online help systems and electronic 
books. (You can find out more about HTML Help at <a href="http://www.microsoft.com/workshop/author/htmlhelp/">http://www.microsoft.com/workwshop/author/htmlhelp/</a>.) 
KeyHH can be used in addition to or as a complete replacement for HH.EXE. KeyHH 
provides all of the functionality of HH.EXE, offers solutions for some known 
bugs in HTML Help, and provides additional functionality as well.</p>
<h2>Why Should I Use KeyHH?</h2>
<p>KeyHH helps you to resolve these problems with HH.EXE: </p>

<div id="Out1Arrow" style="position:relative;">
<span id="Out1" class="Outline" style="cursor: hand;"><font font="" size="+1" color="Gray" face="Webdings">4</font>&nbsp;</span>
<u id="Out1" class="Outline" style="cursor: hand; ">
	Open a standalone HTML Help window</u>
</div> 
<div id="Out1details" style="display:None; position:relative;">
<span id="Out1" class="Outline" style="cursor: hand; "><font font="" size="+1" color="Gray" face="Webdings">6</font>&nbsp;</span>
<u id="Out1" class="Outline" style="cursor: hand; ">
	Open a standalone HTML Help window</u>
<div style="position:relative; left:30; width:95%;">
	
<p>You can use KeyHH to create a standalone HTML Help window. This window 
remains open until the user closes it. Once this window is created, you can open 
new topics in the window without creating a new window, just as you can with 
WinHelp. You can use this functionality from an HTML Help window, a program, or 
a WinHelp file.
</p></div></div>
<p>

</p><div id="Out2Arrow" style="position:relative; ">
<p>
<span id="Out2" class="Outline" style="cursor: hand;"><font font="" size="+1" color="Gray" face="Webdings">4</font>&nbsp;</span>
<u id="Out2" class="Outline" style="cursor: hand; ">
	Open an HTML Help topic from a WinHelp topic</u> 
</p></div> 
<div id="Out2details" style="display:None; position:relative;">
<p>
<span id="Out2" class="Outline" style="cursor: hand; "><font font="" size="+1" color="Gray" face="Webdings">6</font>&nbsp;</span>
<u id="Out2" class="Outline" style="cursor: hand; ">
	Open an HTML Help topic from a WinHelp topic</u>
</p><div style="position:relative; left:30; width:95%;">

<p>
Although you can easily link from an HTML Help (.chm) file to a WinHelp (.hlp) topic, the 
opposite is more difficult. KeyHH is designed to help you to open a .chm file 
from a WinHelp topic. This feature is especially useful if you're creating 
hybrid (mixed WinHelp and HTML Help) documentation sets. For example, suppose 
you decided that you want to use WinHelp topics for What's This? help, since 
WinHelp popup topics are more feature-rich than HTML Help popups. However, you 
also want to link from the What's This? help topics to a more complete 
explanation in a .chm file. KeyHH allows you to do this without creating 
multiple HTML Help windows.
</p></div></div>
<p></p>

<div id="Out3Arrow" style="position:relative; ">
<p>
<span id="Out3" class="Outline" style="cursor: hand;"><font font="" size="+1" color="Gray" face="Webdings">4</font>&nbsp;</span>
<u id="Out3" class="Outline" style="cursor: hand; ">
	Open an HTML Help window based on a keyword search</u>
</p></div> 
<div id="Out3details" style="display:None; position:relative;">
<p>
<span id="Out3" class="Outline" style="cursor: hand; "><font font="" size="+1" color="Gray" face="Webdings">6</font>&nbsp;</span>
<u id="Out3" class="Outline" style="cursor: hand; ">
	Open an HTML Help window based on a keyword search</u>
</p><div style="position:relative; left:30; width:95%;">

<p>
A common way of linking topics in a help system is through keyword and associative 
links--KLinks and ALinks, in WinHelp terminology. Both HTML Help and KeyHH 
support this linking capability. However, KeyHH also allows you to open the new 
topics in a window that is already open. In addition, KeyHH allows you to use 
ALinks and KLinks in ways that HH.EXE doesn't support. For example, you can: 
</p><ul>
    <li>Run KLinks and ALinks that are in a WinHelp topic that is linked to your .chm file. 
    </li><li>Create a standalone window from an ALink or KLink, rather than just from 
    a specific URL (although you can do that, too) 
    </li><li>From a program, open a particular topic through ALinks or KLinks, even 
    if your program doesn't handle structures or the HtmlHelp API) </li></ul>
<p></p></div></div>
<p></p>

<div id="Out4Arrow" style="position:relative; ">
<p>
<span id="Out4" class="Outline" style="cursor: hand;"><font font="" size="+1" color="Gray" face="Webdings">4</font>&nbsp;</span>
<u id="Out4" class="Outline" style="cursor: hand; ">
	Open an HTML Help 1.1 window using a mapped id</u>
</p></div> 
<div id="Out4details" style="display:None; position:relative;">
<p>
<span id="Out4" class="Outline" style="cursor: hand; "><font font="" size="+1" color="Gray" face="Webdings">6</font>&nbsp;</span>
<u id="Out4" class="Outline" style="cursor: hand; ">
	Open an HTML Help 1.1 window using a mapped id</u>
</p><div style="position:relative; left:30; width:95%;">

<p>
HTML Help 1.1 requires you to open a mapped topic in the default window set up in the project. (Mapped 
topics allow programmers to open a topic in an HTML Help window without having 
to know the URL. Instead, all they need to know is the id you have mapped to the 
topic.) HTML Help 1.1 ignores a window type associated with a mapped topic and 
attempts to open the topic in the default window in your project. If you don't 
specify a default window, HTML Help attempts to create a default window but 
doesn't always do a good job. Using KeyHH, you can open a mapped HTML Help topic 
in any window that you have set up in your project. This doesn't have to be the 
default window. 
</p><p>If you're using HTML Help 1.2, you don't need to worry about this 
problem.</p>
</div></div>

<h2>How Do I Use KeyHH?</h2>
<h4>To create a unique KeyHH window</h4>
<p>You create a unique KeyHH window by specifying a dash (-) followed by an 
identifying name and the name of the CHM file. KeyHH will then check to see if 
an HTML Help window is already open that uses this identifying name. If so, the 
HTML Help window will simply be updated with the new CHM file or topic. If it is 
not open, KeyHH will create a new HTML Help window.</p>
<p>You can use any identifier that you want, as long as the first character does 
not begin with the pound (#) character.</p>
<p>For example, to open a topic called tagref.htm in the htmlhelp.chm file, you 
would use this command:</p>
<p><font face="Courier">KeyHH -MyID htmlhelp.chm::/tagref.htm</font></p>
<p>Suppose you then wanted to link from tagref.html to a topic called api.htm. 
You would then use this command:</p>
<p><font face="Courier">KeyHH -MyID htmlhlp.chm::/api.htm</font></p>
<p>If you were using HH.EXE in the above example, HTML Help would open a second 
window when the user clicked the api.htm link. If you're using KeyHH, api.htm 
simply replaces tagref.htm in the same window because the identifying name 
(-MyID) is the same in both cases.</p>
<p><strong>Note:</strong> Don't use filenames with hyphens (e.g., new-topic.htm) 
when working with KeyHH. 
</p><h4>To create another HTML Help window that won't close when the original window 
is closed</h4>
<p>You may want to open a topic you have linked in an HTML Help window in a 
second. Often, help authors use the Related Topics command or an Associative 
Link command in this case. However, if you close the original window, all HTML 
Help windows are automatically closed. To keep the second window open, use the 
HTML Help ShortCut command to run KeyHH. If you are using HTML Help Workshop to 
edit your HTML file, follow these steps:</p>
<ol>
    <li>Open the HTML file in which you want to create a ShortCut. 
    </li><li>Click inside the BODY of the file. 
    </li><li>From the <strong>Tags </strong>menu, choose <strong>HTML Help 
    Control</strong>. 
    </li><li>From the listbox, choose <b>ShortCut</b> as the command you want to add. 
    
    </li><li>If you have already used the HTML Help ActiveX control in this HTML 
    file, type an <b>ID name</b> for this instance of the control in the textbox 
    at the bottom of the wizard. If you haven't used the control, you'll get the 
    default (hhctrl.ocx). 
    </li><li>Click <strong>Next</strong>, and follow the instructions on your screen. 
    
    </li><li>When the page opens that asks for the program, parameters, and window 
    class, enter the following: <br><b>Program:</b> <font face="Courier">KeyHH.exe</font><br><b>Parameter:</b> <font face="Courier">-MyID 
    htmlhlp.chm::/api.htm</font><br>
    </li><li>Complete the wizard. </li></ol>
<p>Because of the way HTML Help 1.2 handles unnamed window types, you may still 
get multiple windows when HTML Help 1.2 is installed, particularly when working 
with multiple help systems (e.g., merged CHM files). To resolve this problem, 
declare a window type whose name begins with the prefix "$global_" in 
each CHM file. For example: 
</p><p><font face="Courier">file1.chm::/file1topic1.htm&gt;$global_task 
<br>file2.chm::/file2topic1.htm&gt;$global_task</font> 
</p><p>The $global_" prefix tells HTM LHelp that the window type can be used by 
any CHM file once the initial window type has been opened. 
</p><h4>To link from a WinHelp topic to a CHM file</h4>
<p>To link from an WinHelp file to an HTML Help file, you must use the 
<strong>ExecFile</strong> WinHelp macro. Here is an example:</p>
<p><font face="Courier">ExecFile(KeyHH, "-MyHelp 
myfile.chm::/mytopic.htm&gt;mywindow", SW_SHOW)</font></p>
<h2>Additional Commands</h2>
<p>You can also use KeyHH to find the topic to display based on one or more 
keywords, one or more ALink names, or a mapped numeric id. Note that when you 
use one of these commands without specifying a KeyHH identifier, then KeyHH will 
automatically create an identifier called KL.</p>
<h4>To find topics with keywords in common (KLink)</h4>
<p>You can have KeyHH find and list topics that share keywords by specifying a 
<strong>-#klink</strong> followed by one or more keywords separated by 
semi-colons. If any of your keywords contain spaces, then all of the keywords 
must be surrounded in single or double quotes. For example, to look up the topic 
associated with the keyword "ActiveX Control Wizard" in the HTML Help 
documentation, you would specify:</p>
<p><font face="Courier">KeyHH -MyHelp -#klink "ActiveX Control Wizard" 
htmlhelp.chm</font></p>
<p><font face="Courier"></font>If more then one topic is found for the keyword or 
keywords you request, the user will be presented with a dialog listing the 
titles of the HTML files that were found. The user can choose one of the topics 
from that list. </p>
<h4>To use associative linking (ALink)</h4>
<p>You can have KeyHH look up an ALink name in the same way you lookup a 
keyword, only you specify <strong>-#alink</strong> instead of 
<strong>-#klink</strong>. The rest of the syntax is identical.</p>
<h4>To link to a context-sensitive topic</h4>
<p>If the project file used to create your .chm file contains a [MAP] and 
[ALIAS] section, then you can also jump to a specific topic that has a mapped 
numeric id aliased to it. If you know the number that is mapped to the topic you 
want to display, use a <strong>-#mapid</strong> followed by the number. For 
example, if you wanted to display the topic associated with the mapped id 112 
you would specify:</p>
<p><font face="Courier">KeyHH -MyHelp -#mapid 112 myfile.chm</font></p>
<h4><font face="Courier"></font>Special note for programmers</h4>
<p>If you use the HH_HELP_CONTEXT command of the <strong>HtmlHelp</strong> API 
with HTML Help version 1.1, the only window type in which you can display your 
topicis the default window type set up in the HTML Help project. However, KeyHH 
is able to display the topic in a specified window type even when HTML Help 1.1 
is being used. You can use KeyHH as an alternative to the HH_HELP_CONTEXT 
command to get the correct window type.</p>
<h2>Registering KeyHH</h2>
<p>KeyHH includes two special commands: <strong>-#register </strong>and 
<strong>-#unregister</strong>. When you call KeyHH with 
<strong>-#register</strong>, it becomes associated with all files that have the 
extension .CHM. Once you do this, KeyHH runs instead of HH.EXE whenever you 
double-click a CHM file.</p>
<p>After you register KeyHH, the icons for all .CHM files will change to reflect 
the association with KeyHH instead of HH.EXE.</p>
<p>You can unregister KeyHH by running the <strong>-#unregister</strong> 
command. This command removes the association with .chm files, and registers 
HH.EXE instead.</p>
<p>It is not necessary to register KeyHH. The ability to register KeyHH is 
provided purely as a convenience (and for those who prefer the KeyHH icons for 
.chm files). If you do register KeyHH, it is not necessary to ship HH.EXE.</p>
<h2>What Do I Need to Do to Ship KeyHH with My Project?</h2>
<p>Along with the files for your help projects (e.g., .hlp, .cnt, .chm), you 
need to distribute KeyHH.exe. This program must installed in the same directory 
as HH.EXE (the same directory where Windows is installed).</p>
<h2>About the Developers</h2>
<p>KeyHH is one of the products developed through the parnership of Ralph Walden 
and Cheri Lockett Zubak. You can find more of Ralph's and Cheri's products at <a href="http://www.keyworks.net/">http://www.keyworks.net</a>. 
</p><p><b>Ralph Walden</b> is best known as Microsoft's lead architect for WinHelp 
and HTML Help. He began working on online help systems for Microsoft in 1987 
with the creation of QuickHelp. In 1992, he took over the development of 
WinHelp, producing WinHelp 4.0 and Help Workshop. In 1996, he began creating the 
largest team Microsoft has ever put on a help project, and was the system 
architect for HTML Help. He has since left Microsoft, and now is 
principal of KeyWorks Software (<a href="http://www.keyworks.net/">http://www.keyworks.net</a>). 
</p><p><b>Cheryl Lockett Zubak</b> is President of Work Write, Inc., a consulting 
firm that specializes in the design and development of user assistance and 
performance support for the Windows and Web platforms. An accomplished and 
popular speaker on hypermedia design and development, Cheryl is coauthor of 
<em>Designing Windows 95 Help</em> and a forthcoming book about HTML-based help 
design. Cheryl is a certified trainer for RoboHELP Office products (Blue Sky 
Software) and ForeHelp (ForeFront, Inc.), and is a charter member of the HTML 
Help MVP program. To learn more about Work Write, Inc. services, visit the Work 
Write, Inc. website at <a href="http://www.workwrite.com/">http://www.workwrite.com</a>. </p>
<h2>Questions about KeyHH</h2>
<p>If you have questions about using KeyHH, please send an email to <a href="mailto:kthelp@workwrite.com">kthelp@workwrite.com</a>.</p>
<script>
function clickHandler() 
{
    var targetId, arrowId, srcElement, targetElement, arrowElement;

    srcElement = window.event.srcElement;
    if (srcElement.className == "Outline") {
        targetId = srcElement.id + "details";
        arrowId = srcElement.id + "Arrow";
        targetElement = document.all(targetId);
        if (targetElement.style.display == "none") {
              targetElement.style.display = "";
        } 
        else {
              targetElement.style.display = "none";
        }
        arrowElement = document.all(arrowId);
        if (arrowElement.style.display == "none") {
            arrowElement.style.display = "";
        } 
        else {
            arrowElement.style.display = "none";
        }
    }
}
document.onclick = clickHandler;
</script>
</body></html>