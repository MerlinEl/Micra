<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="_scene_object_8cs" kind="file">
    <compoundname>SceneObject.cs</compoundname>
    <innerclass refid="class_micra_1_1_core_1_1_scene_element" prot="public">Micra::Core::SceneElement</innerclass>
    <innerclass refid="class_micra_1_1_core_1_1_scene_object" prot="public">Micra::Core::SceneObject</innerclass>
    <innernamespace refid="namespace_micra_1_1_core">Micra::Core</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2012<sp/>Autodesk,<sp/>Inc.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>of<sp/>this<sp/>software<sp/>is<sp/>subject<sp/>to<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Autodesk<sp/>license</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>agreement<sp/>provided<sp/>at<sp/>the<sp/>time<sp/>of<sp/>installation<sp/>or<sp/>download,<sp/>or<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>otherwise<sp/>accompanies<sp/>this<sp/>software<sp/>in<sp/>either<sp/>electronic<sp/>or<sp/>hard<sp/>copy<sp/>form.<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Autodesk.Max;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections.Generic;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Linq;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//http://docs.autodesk.com/3DSMAX/16/ENU/3ds-Max-SDK-Programmer-Guide/index.html?url=files/GUID-B2693B67-F56D-4EEB-9FB8-19700D7BAB90.htm,topicNumber=d30e23902</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Micra.Core<sp/>{</highlight></codeline>
<codeline lineno="17" refid="class_micra_1_1_core_1_1_scene_element" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_micra_1_1_core_1_1_scene_element" kindref="compound">SceneElement</ref>:<ref refid="class_micra_1_1_core_1_1_reference_target" kindref="compound">ReferenceTarget</ref><sp/>{</highlight></codeline>
<codeline lineno="18" refid="class_micra_1_1_core_1_1_scene_element_1a6355948b11d4a5f07268a3dbeddeae99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IBaseObject<sp/>_BaseObject<sp/>=&gt;<sp/>_Anim<sp/>as<sp/>IBaseObject;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="class_micra_1_1_core_1_1_scene_element_1aa51687267fc269e02a082c95d4411d8b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">internal</highlight><highlight class="normal"><sp/><ref refid="class_micra_1_1_core_1_1_scene_element_1aa51687267fc269e02a082c95d4411d8b" kindref="member">SceneElement</ref>(IBaseObject<sp/>x)<sp/>:<sp/>base(x)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>parameterBlock<sp/>==<sp/>null<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IIParamArray<sp/>pa<sp/>=<sp/>_BaseObject.ParamBlock;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pa<sp/>!=<sp/>null<sp/>)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameterBlock<sp/>=<sp/>CreateWrapper&lt;ParameterBlock1&gt;(pa.ParamBlock);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="class_micra_1_1_core_1_1_scene_element_1a3502b1479d65a502d4cd7fdce6411a06" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IEnumerable&lt;Node&gt;<sp/>Nodes<sp/>=&gt;<sp/>from<sp/>x<sp/>in<sp/>Observers<sp/>where<sp/>x<sp/>is<sp/><ref refid="class_micra_1_1_core_1_1_node" kindref="compound">Node</ref><sp/>select<sp/>x<sp/>as<sp/><ref refid="class_micra_1_1_core_1_1_node" kindref="compound">Node</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="class_micra_1_1_core_1_1_scene_element_1a0a9eb0952dcfe0d371fcd40acbcd37c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Instanced<sp/>=&gt;<sp/>Nodes.Count()<sp/>&gt;<sp/>1;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="class_micra_1_1_core_1_1_scene_element_1a4ef09fef3dac4cbbd0a767286dec2d9f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>Name<sp/>=&gt;<sp/>_BaseObject.ObjectName;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="class_micra_1_1_core_1_1_scene_object" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_micra_1_1_core_1_1_scene_object" kindref="compound">SceneObject</ref>:<ref refid="class_micra_1_1_core_1_1_scene_element" kindref="compound">SceneElement</ref><sp/>{</highlight></codeline>
<codeline lineno="40" refid="class_micra_1_1_core_1_1_scene_object_1a0adeac7a6f35de14e5fd5b1ca7fbafca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">internal</highlight><highlight class="normal"><sp/><ref refid="class_micra_1_1_core_1_1_scene_object_1a0adeac7a6f35de14e5fd5b1ca7fbafca" kindref="member">SceneObject</ref>(IObject<sp/>x)<sp/>:<sp/>base(x)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#region<sp/>INTERNAL<sp/>TYPES</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="48" refid="class_micra_1_1_core_1_1_scene_object_1a9a034b3cc67f0fe85e9cb1de18ce2110" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">internal</highlight><highlight class="normal"><sp/>IObject<sp/>_Object<sp/>=&gt;<sp/>_Anim<sp/>as<sp/>IObject;</highlight></codeline>
<codeline lineno="50" refid="class_micra_1_1_core_1_1_scene_object_1a7a263bf51190c6e3dfd9a7c1e8fbca2e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">internal</highlight><highlight class="normal"><sp/>IGeomObject<sp/>_IGeomObject<sp/>=&gt;<sp/>_Anim<sp/>as<sp/>IGeomObject;<sp/><sp/></highlight><highlight class="comment">//test</highlight></codeline>
<codeline lineno="58" refid="class_micra_1_1_core_1_1_scene_object_1a1bc0798c10b681c86ba84476c44f4711" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">internal</highlight><highlight class="normal"><sp/><ref refid="class_micra_1_1_core_1_1_node" kindref="compound">Node</ref><sp/>_Node<sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">;<sp/>set;<sp/>}<sp/></highlight><highlight class="comment">//get<sp/>parent<sp/>Node<sp/>if<sp/>is<sp/>assinged</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endregion</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#region<sp/>PUBLIC<sp/>TYPES</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="class_micra_1_1_core_1_1_scene_object_1abbfb676f39795bcdb1f7a485445f8949" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_micra_1_1_core_1_1_mesh" kindref="compound">Mesh</ref><sp/><ref refid="class_micra_1_1_core_1_1_mesh" kindref="compound">Mesh</ref><sp/>=&gt;<sp/>GetMesh(<ref refid="class_micra_1_1_core_1_1_kernel" kindref="compound">Kernel</ref>.<ref refid="class_micra_1_1_core_1_1_kernel_1a69390eb10a4e222d27395138c67796aa" kindref="member">Now</ref>);</highlight></codeline>
<codeline lineno="66" refid="class_micra_1_1_core_1_1_scene_object_1a4239bd0837f144fd4cee24a8303dfd01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_micra_1_1_core_1_1_geometry" kindref="compound">Geometry</ref><sp/><ref refid="class_micra_1_1_core_1_1_geometry" kindref="compound">Geometry</ref><sp/>=&gt;<sp/>CreateWrapper&lt;Geometry&gt;(_Anim);<sp/></highlight><highlight class="comment">//test<sp/>seems<sp/>to<sp/>works</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="class_micra_1_1_core_1_1_scene_object_1aedf78c6d2a5ccec06f5b2c6b67f94718" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_micra_1_1_core_1_1_scene_object" kindref="compound">SceneObject</ref><sp/>Base<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_micra_1_1_core_1_1_scene_object" kindref="compound">SceneObject</ref><sp/>r<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>r.<ref refid="class_micra_1_1_core_1_1_scene_object_1a9a034b3cc67f0fe85e9cb1de18ce2110" kindref="member">_Object</ref><sp/>is<sp/>IIDerivedObject<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IIDerivedObject<sp/>ido<sp/>=<sp/>r._Object<sp/>as<sp/>IIDerivedObject;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Should<sp/>never<sp/>happen,<sp/>but<sp/>we<sp/>have<sp/>good<sp/>reason<sp/>to<sp/>be<sp/>paranoid.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ido.ObjRef<sp/>==<sp/>null<sp/>)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>Animatable.CreateWrapper&lt;<ref refid="class_micra_1_1_core_1_1_scene_object" kindref="compound">SceneObject</ref>&gt;(ido.ObjRef);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endregion</highlight></codeline>
<codeline lineno="82"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#region<sp/>MESH<sp/>OBJECT</highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ITriObject<sp/>GetITriobject()<sp/>=&gt;<sp/>GetITriobject(<ref refid="class_micra_1_1_core_1_1_kernel" kindref="compound">Kernel</ref>.<ref refid="class_micra_1_1_core_1_1_kernel_1a69390eb10a4e222d27395138c67796aa" kindref="member">Now</ref>);</highlight></codeline>
<codeline lineno="86" refid="class_micra_1_1_core_1_1_scene_object_1aa8b5cefda5c4ef25ee49f97b3b363e03" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ITriObject<sp/><ref refid="class_micra_1_1_core_1_1_scene_object_1aa8b5cefda5c4ef25ee49f97b3b363e03" kindref="member">GetITriobject</ref>(<ref refid="struct_micra_1_1_core_1_1_time_value" kindref="compound">TimeValue</ref><sp/>t)<sp/>{<sp/></highlight><highlight class="comment">//Autodesk.Max.Wrappers.TriObject</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Kernel.WriteLine(&quot;GetITriobject<sp/>&gt;<sp/>from<sp/>_Object:{0}&quot;,<sp/>_Object);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IClass_ID<sp/>triClass<sp/>=<sp/>ClassID.TriObject._IClass_ID;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>_Object.CanConvertToType(triClass)<sp/>==<sp/>0<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_Object.ConvertToType(t,<sp/>triClass)<sp/>as<sp/>ITriObject;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IMesh<sp/>GetImesh()<sp/>=&gt;<sp/>GetITriobject(<ref refid="class_micra_1_1_core_1_1_kernel" kindref="compound">Kernel</ref>.<ref refid="class_micra_1_1_core_1_1_kernel_1a69390eb10a4e222d27395138c67796aa" kindref="member">Now</ref>)<ref refid="class_micra_1_1_core_1_1_mesh" kindref="compound">.Mesh</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IMesh<sp/>GetImesh(<ref refid="struct_micra_1_1_core_1_1_time_value" kindref="compound">TimeValue</ref><sp/>t)<sp/>=&gt;<sp/>GetITriobject(t)<ref refid="class_micra_1_1_core_1_1_mesh" kindref="compound">.Mesh</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_micra_1_1_core_1_1_mesh" kindref="compound">Mesh</ref><sp/>GetMesh()<sp/>=&gt;<sp/>GetMesh(<ref refid="class_micra_1_1_core_1_1_kernel" kindref="compound">Kernel</ref>.<ref refid="class_micra_1_1_core_1_1_kernel_1a69390eb10a4e222d27395138c67796aa" kindref="member">Now</ref>);</highlight></codeline>
<codeline lineno="99" refid="class_micra_1_1_core_1_1_scene_object_1a5a4917095d3f658b90d84b8fe8c44448" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_micra_1_1_core_1_1_mesh" kindref="compound">Mesh</ref><sp/><ref refid="class_micra_1_1_core_1_1_scene_object_1a5a4917095d3f658b90d84b8fe8c44448" kindref="member">GetMesh</ref>(<ref refid="struct_micra_1_1_core_1_1_time_value" kindref="compound">TimeValue</ref><sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ITriObject<sp/>tri<sp/>=<sp/>GetITriobject(t);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tri<sp/>==<sp/>null<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_micra_1_1_core_1_1_mesh" kindref="compound">Mesh</ref><sp/>r<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_micra_1_1_core_1_1_mesh" kindref="compound">Mesh</ref>(tri.Mesh);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tri.GetType().TypeHandle.Value<sp/>!=<sp/>_Object.GetType().TypeHandle.Value<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(<sp/>tri.Handle<sp/>!=<sp/>_Object.Handle<sp/>)<sp/>{<sp/>//replaced<sp/>with<sp/>.GetType().TypeHandle<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RefResult<sp/>rr<sp/>=<sp/>tri.MaybeAutoDelete();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>rr<sp/>==<sp/>RefResult.Fail<sp/>)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Exception(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>autodelete<sp/>the<sp/>tri-object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endregion</highlight></codeline>
<codeline lineno="116"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#region<sp/>POLY<sp/>OBJECT<sp/>TEST</highlight></codeline>
<codeline lineno="118"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="class_micra_1_1_core_1_1_scene_object_1a841e9ca68569d056c11b6d332987f918" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IPolyObject<sp/><ref refid="class_micra_1_1_core_1_1_scene_object_1a841e9ca68569d056c11b6d332987f918" kindref="member">GetIpolyObject</ref>(<ref refid="struct_micra_1_1_core_1_1_time_value" kindref="compound">TimeValue</ref><sp/>t)<sp/>{<sp/></highlight><highlight class="comment">//Autodesk.Max.Wrappers.PolyObject</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Kernel.WriteLine(&quot;GetIpolyObject<sp/>&gt;<sp/>from<sp/>_Object:{0}&quot;,<sp/>_Object);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IClass_ID<sp/>polyClass<sp/>=<sp/>ClassID.PolyObject._IClass_ID;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>_Object.CanConvertToType(polyClass)<sp/>==<sp/>0<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_Object.ConvertToType(t,<sp/>polyClass)<sp/>as<sp/>IPolyObject;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IMNMesh<sp/>GetIpoly()<sp/>=&gt;<sp/>GetIpolyObject(<ref refid="class_micra_1_1_core_1_1_kernel" kindref="compound">Kernel</ref>.<ref refid="class_micra_1_1_core_1_1_kernel_1a69390eb10a4e222d27395138c67796aa" kindref="member">Now</ref>)<ref refid="class_micra_1_1_core_1_1_mesh" kindref="compound">.Mesh</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IMNMesh<sp/>GetIpoly(<ref refid="struct_micra_1_1_core_1_1_time_value" kindref="compound">TimeValue</ref><sp/>t)<sp/>=&gt;<sp/>GetIpolyObject(t)<ref refid="class_micra_1_1_core_1_1_mesh" kindref="compound">.Mesh</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_micra_1_1_core_1_1_poly" kindref="compound">Poly</ref><sp/>GetPoly()<sp/>=&gt;<sp/>GetPoly(<ref refid="class_micra_1_1_core_1_1_kernel" kindref="compound">Kernel</ref>.<ref refid="class_micra_1_1_core_1_1_kernel_1a69390eb10a4e222d27395138c67796aa" kindref="member">Now</ref>);</highlight></codeline>
<codeline lineno="130" refid="class_micra_1_1_core_1_1_scene_object_1ab041c992ccfb447506a8cafdf9112902" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_micra_1_1_core_1_1_poly" kindref="compound">Poly</ref><sp/><ref refid="class_micra_1_1_core_1_1_scene_object_1ab041c992ccfb447506a8cafdf9112902" kindref="member">GetPoly</ref>(<ref refid="struct_micra_1_1_core_1_1_time_value" kindref="compound">TimeValue</ref><sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IPolyObject<sp/>pol<sp/>=<sp/>GetIpolyObject(t);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pol<sp/>==<sp/>null<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_micra_1_1_core_1_1_poly" kindref="compound">Poly</ref><sp/>r<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_micra_1_1_core_1_1_poly" kindref="compound">Poly</ref>(pol.Mesh);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pol.GetType().TypeHandle.Value<sp/>!=<sp/>_Object.GetType().TypeHandle.Value<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(pol.Handle<sp/>!=<sp/>_Object.Handle)<sp/>{<sp/>//replaced<sp/>with<sp/>.GetType().TypeHandle<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RefResult<sp/>rr<sp/>=<sp/>pol.MaybeAutoDelete();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>rr<sp/>==<sp/>RefResult.Fail<sp/>)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Exception(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>autodelete<sp/>the<sp/>poly-object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endregion</highlight></codeline>
<codeline lineno="146"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>ClassOf()<sp/>=&gt;<sp/>ClassID.GetClassName(<ref refid="struct_micra_1_1_core_1_1_class_i_d" kindref="compound">ClassID</ref>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>SuperClassOf()<sp/>=&gt;<sp/>SuperClassID.GetClassName(<ref refid="struct_micra_1_1_core_1_1_super_class_i_d" kindref="compound">SuperClassID</ref>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsClassOf(<ref refid="struct_micra_1_1_core_1_1_class_i_d" kindref="compound">ClassID</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>=&gt;<sp/>ClassID.PartA<sp/>==<sp/>id.PartA<sp/>&amp;&amp;<sp/>ClassID.PartB<sp/>==<sp/>id.PartB;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsSuperClassOf(<ref refid="struct_micra_1_1_core_1_1_super_class_i_d" kindref="compound">SuperClassID</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>=&gt;<sp/><ref refid="struct_micra_1_1_core_1_1_super_class_i_d" kindref="compound">SuperClassID</ref><sp/>==<sp/>id;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AddModifier(<ref refid="class_micra_1_1_core_1_1_modifier" kindref="compound">Modifier</ref><sp/>m)<sp/>=&gt;<sp/>_Node?.AddModifier(m);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Move(<ref refid="class_micra_1_1_core_1_1_point3" kindref="compound">Point3</ref><sp/>p)<sp/>=&gt;<sp/>_Node?.Move(p);<sp/></highlight><highlight class="comment">//shortcut<sp/>&gt;<sp/>if<sp/>(_Node!=null)<sp/>_Node.Move(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="class_micra_1_1_core_1_1_scene_object_1ad4b6bc6ab4ace76bc9afcceb03607bda" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_micra_1_1_core_1_1_scene_object_1ad4b6bc6ab4ace76bc9afcceb03607bda" kindref="member">GetArea</ref>()<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>ClassOf()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>nameof(<ref refid="struct_micra_1_1_core_1_1_class_i_d" kindref="compound">ClassID</ref>.<ref refid="struct_micra_1_1_core_1_1_class_i_d_1adf93402615b1eafbd97992a1c054eb02" kindref="member">EditableMesh</ref>):</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetMesh().GetArea();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>nameof(<ref refid="struct_micra_1_1_core_1_1_class_i_d" kindref="compound">ClassID</ref>.<ref refid="struct_micra_1_1_core_1_1_class_i_d_1afcdcf24fa5c77b7690a1d86a8d53a3f2" kindref="member">EditablePoly</ref>):</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetPoly().GetArea();<sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165" refid="class_micra_1_1_core_1_1_scene_object_1a13c54f1c468310f8a688ae5c74f6dcad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>List&lt;int&gt;<sp/><ref refid="class_micra_1_1_core_1_1_scene_object_1a13c54f1c468310f8a688ae5c74f6dcad" kindref="member">GetSelectedFaces</ref>()<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Max.Log(</highlight><highlight class="stringliteral">&quot;GetSelectedFaces&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Max.Log(</highlight><highlight class="stringliteral">&quot;GetSelectedFaces<sp/>Name:{0}&quot;</highlight><highlight class="normal">,<sp/>Name);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Max.Log(</highlight><highlight class="stringliteral">&quot;GetSelectedFaces<sp/>Class:{0}&quot;</highlight><highlight class="normal">,<sp/>ClassOf());</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>ClassOf()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>nameof(<ref refid="struct_micra_1_1_core_1_1_class_i_d" kindref="compound">ClassID</ref>.<ref refid="struct_micra_1_1_core_1_1_class_i_d_1adf93402615b1eafbd97992a1c054eb02" kindref="member">EditableMesh</ref>):<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetMesh().GetSelectedFaces();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>nameof(<ref refid="struct_micra_1_1_core_1_1_class_i_d" kindref="compound">ClassID</ref>.<ref refid="struct_micra_1_1_core_1_1_class_i_d_1afcdcf24fa5c77b7690a1d86a8d53a3f2" kindref="member">EditablePoly</ref>):<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetPoly().GetSelectedFaces();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="class_micra_1_1_core_1_1_scene_object_1a0a999c503fe9bb116c2b95b7e4a0a5dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>List&lt;int&gt;<sp/><ref refid="class_micra_1_1_core_1_1_scene_object_1a0a999c503fe9bb116c2b95b7e4a0a5dd" kindref="member">GetSelectedEdges</ref>()<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>IsClassOf(<ref refid="struct_micra_1_1_core_1_1_class_i_d" kindref="compound">ClassID</ref>.<ref refid="struct_micra_1_1_core_1_1_class_i_d_1adf93402615b1eafbd97992a1c054eb02" kindref="member">EditableMesh</ref>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kernel.WriteLine(</highlight><highlight class="stringliteral">&quot;GetSelectedEdges<sp/>&gt;<sp/>on<sp/>Mesh!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GeoOps.GetSelectedEdges(GetImesh());</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>IsClassOf(<ref refid="struct_micra_1_1_core_1_1_class_i_d" kindref="compound">ClassID</ref>.<ref refid="struct_micra_1_1_core_1_1_class_i_d_1afcdcf24fa5c77b7690a1d86a8d53a3f2" kindref="member">EditablePoly</ref>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kernel.WriteLine(</highlight><highlight class="stringliteral">&quot;GetSelectedEdges<sp/>&gt;<sp/>on<sp/>Poly!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetPoly().GetSelectedEdges();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="class_micra_1_1_core_1_1_scene_object_1a350fe67e539e59adcd8d5c246a35cd81" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>List&lt;int&gt;<sp/><ref refid="class_micra_1_1_core_1_1_scene_object_1a350fe67e539e59adcd8d5c246a35cd81" kindref="member">GetSelectedVerts</ref>()<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>IsClassOf(<ref refid="struct_micra_1_1_core_1_1_class_i_d" kindref="compound">ClassID</ref>.<ref refid="struct_micra_1_1_core_1_1_class_i_d_1adf93402615b1eafbd97992a1c054eb02" kindref="member">EditableMesh</ref>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kernel.WriteLine(</highlight><highlight class="stringliteral">&quot;GetSelectedVerts<sp/>&gt;<sp/>on<sp/>Mesh!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GeoOps.GetSelectedVerts(GetImesh());</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>IsClassOf(<ref refid="struct_micra_1_1_core_1_1_class_i_d" kindref="compound">ClassID</ref>.<ref refid="struct_micra_1_1_core_1_1_class_i_d_1afcdcf24fa5c77b7690a1d86a8d53a3f2" kindref="member">EditablePoly</ref>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kernel.WriteLine(</highlight><highlight class="stringliteral">&quot;GetSelectedVerts<sp/>&gt;<sp/>on<sp/>Poly!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GeoOps.GetSelectedVerts(GetIpoly());</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO<sp/>test<sp/>with<sp/>modifiers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="class_micra_1_1_core_1_1_scene_object_1aa144f93b4bf9c0680596f66af8cd64b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_micra_1_1_core_1_1_scene_object_1aa144f93b4bf9c0680596f66af8cd64b0" kindref="member">SelectAll</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>redraw)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_IGeomObject.SelectAll(GlobalMethods.SubObjectLevel);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>redraw<sp/>)<sp/>Kernel.RedrawViews();</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216" refid="class_micra_1_1_core_1_1_scene_object_1ae0fa91eccd2894f228121b1880b744f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_micra_1_1_core_1_1_scene_object_1ae0fa91eccd2894f228121b1880b744f3" kindref="member">DeselectAll</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>redraw)<sp/>{<sp/></highlight><highlight class="comment">//deselect<sp/>all<sp/>geometry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_IGeomObject.ClearSelection(GlobalMethods.SubObjectLevel);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>redraw<sp/>)<sp/>Kernel.RedrawViews();</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="class_micra_1_1_core_1_1_scene_object_1a3f0b7e599ef13e1ae65428388308f955" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_micra_1_1_core_1_1_scene_object_1a3f0b7e599ef13e1ae65428388308f955" kindref="member">HideGeometry</ref>(<ref refid="class_micra_1_1_core_1_1_node" kindref="compound">Node</ref><sp/>n,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selected)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO<sp/>replace<sp/>with<sp/>switch<sp/>for<sp/>Modifiers<sp/>like:(Unwrap,<sp/>UvMap,<sp/>...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/><ref refid="class_micra_1_1_core_1_1_max" kindref="compound">Max</ref>.<ref refid="class_micra_1_1_core_1_1_max_1a486651cc0ca97d434ada12b4f753e853" kindref="member">SubObjectLevel</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>HideVerts(n,<sp/>selected);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>HideEdges(n,<sp/>selected);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>HideEdges(n,<sp/>selected);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/>HideFaces(n,<sp/>selected);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:<sp/>HideFaces(n,<sp/>selected);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234" refid="class_micra_1_1_core_1_1_scene_object_1ab0c8e61e5c3004a0a1abdc1dec2faf4f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_micra_1_1_core_1_1_scene_object_1ab0c8e61e5c3004a0a1abdc1dec2faf4f" kindref="member">HideVerts</ref>(<ref refid="class_micra_1_1_core_1_1_node" kindref="compound">Node</ref><sp/>n,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selected)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>NotImplementedException();</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="class_micra_1_1_core_1_1_scene_object_1a64139dc345eb5d7b42b58503fa57fbca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_micra_1_1_core_1_1_scene_object_1a64139dc345eb5d7b42b58503fa57fbca" kindref="member">HideEdges</ref>(<ref refid="class_micra_1_1_core_1_1_node" kindref="compound">Node</ref><sp/>n,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selected)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>NotImplementedException();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="class_micra_1_1_core_1_1_scene_object_1aa49d1daf20588eba18208e3ca4564715" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_micra_1_1_core_1_1_scene_object_1aa49d1daf20588eba18208e3ca4564715" kindref="member">HideFaces</ref>(<ref refid="class_micra_1_1_core_1_1_node" kindref="compound">Node</ref><sp/>n,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selected)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>n.<ref refid="class_micra_1_1_core_1_1_node_1af777a03eaa71a2a1fbf7b54a0e32cbaf" kindref="member">ClassOf</ref>()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>nameof(<ref refid="struct_micra_1_1_core_1_1_class_i_d" kindref="compound">ClassID</ref>.<ref refid="struct_micra_1_1_core_1_1_class_i_d_1adf93402615b1eafbd97992a1c054eb02" kindref="member">EditableMesh</ref>):GetMesh().HideFaces(selected);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>nameof(<ref refid="struct_micra_1_1_core_1_1_class_i_d" kindref="compound">ClassID</ref>.<ref refid="struct_micra_1_1_core_1_1_class_i_d_1afcdcf24fa5c77b7690a1d86a8d53a3f2" kindref="member">EditablePoly</ref>):GetPoly().HideFaces(selected);</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>nameof(<ref refid="struct_micra_1_1_core_1_1_class_i_d" kindref="compound">ClassID</ref>.<ref refid="struct_micra_1_1_core_1_1_class_i_d_1a24e90c9b616af7ce7cec57f5547cb448" kindref="member">SplineShape</ref>):</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>selected<sp/>)<sp/>_IGeomObject.ClearSelection(Kernel._Interface.SubObjectLevel);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n.InvalidateObjCache();</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kernel.RedrawViews();</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="class_micra_1_1_core_1_1_scene_object_1ac53565a7b6abba34c3ef11183247dea5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_micra_1_1_core_1_1_scene_object_1ac53565a7b6abba34c3ef11183247dea5" kindref="member">UnhideGeometry</ref>(<ref refid="class_micra_1_1_core_1_1_node" kindref="compound">Node</ref><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO<sp/>replace<sp/>with<sp/>switch<sp/>for<sp/>Modifiers<sp/>like:(Unwrap,<sp/>UvMap,<sp/>...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/><ref refid="class_micra_1_1_core_1_1_max" kindref="compound">Max</ref>.<ref refid="class_micra_1_1_core_1_1_max_1a486651cc0ca97d434ada12b4f753e853" kindref="member">SubObjectLevel</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>UnhideVerts(n);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>UnhideEdges(n);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>UnhideEdges(n);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/>UnhideFaces(n);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:<sp/>UnhideFaces(n);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268" refid="class_micra_1_1_core_1_1_scene_object_1ab584949133612722f723b45af4dcd4a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_micra_1_1_core_1_1_scene_object_1ab584949133612722f723b45af4dcd4a1" kindref="member">UnhideFaces</ref>(<ref refid="class_micra_1_1_core_1_1_node" kindref="compound">Node</ref><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>n.<ref refid="class_micra_1_1_core_1_1_node_1af777a03eaa71a2a1fbf7b54a0e32cbaf" kindref="member">ClassOf</ref>()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>nameof(<ref refid="struct_micra_1_1_core_1_1_class_i_d" kindref="compound">ClassID</ref>.<ref refid="struct_micra_1_1_core_1_1_class_i_d_1adf93402615b1eafbd97992a1c054eb02" kindref="member">EditableMesh</ref>):GetMesh().UnhideFaces();</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>nameof(<ref refid="struct_micra_1_1_core_1_1_class_i_d" kindref="compound">ClassID</ref>.<ref refid="struct_micra_1_1_core_1_1_class_i_d_1afcdcf24fa5c77b7690a1d86a8d53a3f2" kindref="member">EditablePoly</ref>):GetPoly().UnhideFaces();</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n.InvalidateObjCache();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kernel.RedrawViews();</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ITriObject<sp/>triObject<sp/>=<sp/>GetITriobject();</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//triObject-&gt;NotifyDependents(FOREVER,<sp/>OBJ_CHANNELS,<sp/>REFMSG_CHANGE);</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>triObject.NotifyDependents(new<sp/>Interval(),<sp/>EnumChannels.OBJ_CHANNELS,<sp/>EnumRefMsg.REFMSG_CHANGE);</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kernel._Interface.RedrawViews();*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="class_micra_1_1_core_1_1_scene_object_1a5ef8eceb2d44cf0fdb3785d89ae6293e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_micra_1_1_core_1_1_scene_object_1a5ef8eceb2d44cf0fdb3785d89ae6293e" kindref="member">UnhideEdges</ref>(<ref refid="class_micra_1_1_core_1_1_node" kindref="compound">Node</ref><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>NotImplementedException();</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="class_micra_1_1_core_1_1_scene_object_1a1bf45557643f04d96f38dfb4c33bd765" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_micra_1_1_core_1_1_scene_object_1a1bf45557643f04d96f38dfb4c33bd765" kindref="member">UnhideVerts</ref>(<ref refid="class_micra_1_1_core_1_1_node" kindref="compound">Node</ref><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>NotImplementedException();</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="comment">//<sp/>solving<sp/>Object<sp/>reference<sp/>not<sp/>set<sp/>to<sp/>an<sp/>instance<sp/>of<sp/>an<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="comment">/*Kernel.WriteLine(&quot;GetIpolyObject<sp/>&gt;<sp/>from<sp/>_Object:{0}&quot;,<sp/>_Object);</highlight></codeline>
<codeline lineno="297"><highlight class="comment">Kernel.WriteLine(&quot;_Node:{0}&quot;,<sp/>_Node);</highlight></codeline>
<codeline lineno="298"><highlight class="comment">IObjectState<sp/>istate<sp/>=<sp/>_Object.Eval(Kernel.Now);</highlight></codeline>
<codeline lineno="299"><highlight class="comment">Kernel.WriteLine(&quot;istate:{0}&quot;,<sp/>istate);</highlight></codeline>
<codeline lineno="300"><highlight class="comment">IClass_ID<sp/>polyClass<sp/>=<sp/>Kernel._Global.Class_ID.Create((<sp/>uint<sp/>)BuiltInClassIDA.POLYOBJ_CLASS_ID,<sp/>0);</highlight></codeline>
<codeline lineno="301"><highlight class="comment">Kernel.WriteLine(&quot;polyClass:{0}<sp/>epoly:{1}&quot;,<sp/>polyClass,<sp/>ClassID.EditablePoly._IClass_ID);</highlight></codeline>
<codeline lineno="302"><highlight class="comment">IObject<sp/>iObj<sp/>=<sp/>istate.Obj;</highlight></codeline>
<codeline lineno="303"><highlight class="comment">Kernel.WriteLine(&quot;iObj:{0}&quot;,<sp/>iObj);</highlight></codeline>
<codeline lineno="304"><highlight class="comment">if<sp/>(<sp/>iObj.CanConvertToType(polyClass)<sp/>==<sp/>0<sp/>)<sp/>return<sp/>null;</highlight></codeline>
<codeline lineno="305"><highlight class="comment">//_Object.GetReference(0)</highlight></codeline>
<codeline lineno="306"><highlight class="comment">//if<sp/>(<sp/>_Object.CanConvertToType(ClassID.EditablePoly._IClass_ID)<sp/>==<sp/>0<sp/>)<sp/>return<sp/>null;</highlight></codeline>
<codeline lineno="307"><highlight class="comment">IPolyObject<sp/>pobj<sp/>=<sp/>istate.Obj.ConvertToType(t,<sp/>polyClass)<sp/>as<sp/>IPolyObject;</highlight></codeline>
<codeline lineno="308"><highlight class="comment">if<sp/>(<sp/>pobj<sp/>==<sp/>null<sp/>)<sp/>return<sp/>null;</highlight></codeline>
<codeline lineno="309"><highlight class="comment">return<sp/>pobj;*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="comment">/*switch<sp/>(<sp/>GlobalMethods.SubObjectLevel<sp/>)<sp/>{<sp/>//next<sp/>operation<sp/>is<sp/>depend<sp/>on<sp/>subobject<sp/>level</highlight></codeline>
<codeline lineno="313"><highlight class="comment"></highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>1:<sp/>break;</highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>2:<sp/>break;</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>3:<sp/>break;</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>4:<sp/>break;</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>5:<sp/>break;</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/><sp/><sp/><sp/>default:<sp/>break;</highlight></codeline>
<codeline lineno="320"><highlight class="comment">}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IGlobal<sp/>global<sp/>=<sp/>Autodesk.Max.GlobalInterface.Instance;</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IInterface14<sp/>ip<sp/>=<sp/>global.COREInterface14;</highlight></codeline>
<codeline lineno="325"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IINode<sp/>obj<sp/>=<sp/>ip.GetINodeByHandle(handleid).ActualINode;</highlight></codeline>
<codeline lineno="326"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IObjectState<sp/>os<sp/>=<sp/>obj.ObjectRef.Eval(ip.Time);</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Now<sp/>grab<sp/>the<sp/>object<sp/>itself.</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IObject<sp/>objOriginal<sp/>=<sp/>os.Obj;</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Let&apos;s<sp/>make<sp/>sure<sp/>it<sp/>is<sp/>a<sp/>TriObject,<sp/>which<sp/>is<sp/>the<sp/>typical<sp/>kind<sp/>of<sp/>object<sp/>with<sp/>a<sp/>mesh</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!objOriginal.IsSubClassOf(global.TriObjectClassID))</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>If<sp/>it<sp/>is<sp/>NOT,<sp/>see<sp/>if<sp/>we<sp/>can<sp/>convert<sp/>it...</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(objOriginal.CanConvertToType(global.TriObjectClassID)<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objOriginal<sp/>=<sp/>objOriginal.ConvertToType(ip.Time,<sp/>global.TriObjectClassID);</highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ITriObject<sp/>triObj<sp/>=<sp/>objOriginal<sp/>as<sp/>ITriObject;</highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//IPolyObject<sp/>triObj<sp/>=<sp/>objOriginal<sp/>as<sp/>IPolyObject;</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IMesh<sp/>mesh<sp/>=<sp/>triObj.Mesh<sp/>as<sp/>IMesh;</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IBitArray<sp/>facearray<sp/>=<sp/>mesh.FaceSel;<sp/>//Should<sp/>be<sp/>a<sp/>bitarray<sp/>of<sp/>selected<sp/>faces</highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>time<sp/>=<sp/>(int)1;</highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>numFaces<sp/>;</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>numVerts<sp/>;</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global.GetPolygonCount(time,<sp/>objOriginal,<sp/>&amp;numFaces,<sp/>&amp;numVerts);</highlight></codeline>
<codeline lineno="352"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Test</highlight></codeline>
<codeline lineno="355"><highlight class="comment">//gi<sp/>=<sp/>MaxSDK.GetGlobal()</highlight></codeline>
<codeline lineno="356"><highlight class="comment">//b<sp/>=<sp/>gi.BitArray.Create<sp/>10</highlight></codeline>
<codeline lineno="357"><highlight class="comment">//b.get_Item(0)</highlight></codeline>
<codeline lineno="358"><highlight class="comment">//b.Set<sp/>0</highlight></codeline>
<codeline lineno="359"><highlight class="comment">//b.get_Item(0)</highlight></codeline>
<codeline lineno="360"><highlight class="comment">//MaxSDK.GetBit<sp/>b<sp/>0<sp/></highlight></codeline>
<codeline lineno="361"><highlight class="comment">public<sp/>IBitArray<sp/>MakeBits(int<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="comment"></highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>GlobalInterface.Instance.BitArray.Create(size);</highlight></codeline>
<codeline lineno="364"><highlight class="comment">}</highlight></codeline>
<codeline lineno="365"><highlight class="comment"></highlight></codeline>
<codeline lineno="366"><highlight class="comment">public<sp/>int<sp/>GetBit(IBitArray<sp/>bits,<sp/>int<sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="comment"></highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>bits[index];</highlight></codeline>
<codeline lineno="369"><highlight class="comment">}</highlight></codeline>
<codeline lineno="370"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="375"><highlight class="comment"></highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="378"><highlight class="comment">public<sp/>Object<sp/>ORBits(IBitArray<sp/>a,<sp/>IBitArray<sp/>b)</highlight></codeline>
<codeline lineno="379"><highlight class="comment">{</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>a.BitwiseNot.BitwiseAnd(b.BitwiseNot).BitwiseNot;</highlight></codeline>
<codeline lineno="381"><highlight class="comment">}</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/>int<sp/>faceIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="384"><highlight class="comment">IBitArray<sp/>eleBits<sp/>=<sp/>global.BitArray.Create(mesh.Numf);</highlight></codeline>
<codeline lineno="385"><highlight class="comment">mesh.FaceSelect(eleBits);</highlight></codeline>
<codeline lineno="386"><highlight class="comment">mesh.ElementFromFace(faceIndex,<sp/>eleBits);</highlight></codeline>
<codeline lineno="387"><highlight class="comment">for<sp/>(int<sp/>fID<sp/>=<sp/>0;<sp/>fID<sp/>&lt;<sp/>mesh.Numf;<sp/>fID++)</highlight></codeline>
<codeline lineno="388"><highlight class="comment">{</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/><sp/><sp/><sp/>IBitArray<sp/>getBits<sp/>=<sp/>global.BitArray.Create(mesh.Numf);</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/><sp/><sp/><sp/>IMNFace<sp/>f<sp/>=<sp/>mesh.F(fID);</highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(f.GetFlag(Convert.ToUInt32(allPolys[0])))</highlight></codeline>
<codeline lineno="392"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getBits.Set(fID);</highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="comment">}</highlight></codeline>
<codeline lineno="396"><highlight class="comment">mesh.FaceSelect(getBits);</highlight></codeline>
<codeline lineno="397"><highlight class="comment"></highlight></codeline>
<codeline lineno="398"><highlight class="comment"></highlight></codeline>
<codeline lineno="399"><highlight class="comment"></highlight></codeline>
<codeline lineno="400"><highlight class="comment">fn<sp/>getEditableMeshElementsSDK<sp/>obj<sp/>=<sp/>(</highlight></codeline>
<codeline lineno="401"><highlight class="comment"></highlight></codeline>
<codeline lineno="402"><highlight class="comment"><sp/><sp/><sp/><sp/>fn<sp/>firstBit<sp/>bits<sp/>=<sp/>(</highlight></codeline>
<codeline lineno="403"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="404"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local<sp/>b</highlight></codeline>
<codeline lineno="405"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>n<sp/>in<sp/>bits<sp/>while<sp/>not<sp/>(b<sp/>=<sp/>n;<sp/>bits[n])<sp/>do<sp/>()</highlight></codeline>
<codeline lineno="406"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b</highlight></codeline>
<codeline lineno="407"><highlight class="comment"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="408"><highlight class="comment"></highlight></codeline>
<codeline lineno="409"><highlight class="comment"><sp/><sp/><sp/><sp/>local<sp/>g<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(dotnetclass<sp/>&quot;Autodesk.Max.GlobalInterface&quot;).Instance</highlight></codeline>
<codeline lineno="410"><highlight class="comment"><sp/><sp/><sp/><sp/>local<sp/>INode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>g.COREInterface14.GetINodeByHandle<sp/>obj.inode.handle</highlight></codeline>
<codeline lineno="411"><highlight class="comment"><sp/><sp/><sp/><sp/>local<sp/>IMesh<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(INode.EvalWorldState<sp/>0<sp/>true<sp/>).Obj.Mesh_</highlight></codeline>
<codeline lineno="412"><highlight class="comment"><sp/><sp/><sp/><sp/>local<sp/>IAdjFaceList<sp/>=<sp/>g.AdjFaceList.Create<sp/>IMesh<sp/>(g.AdjEdgeList.Create<sp/>IMesh)</highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="414"><highlight class="comment"><sp/><sp/><sp/><sp/>local<sp/>IBitArray<sp/>=<sp/>g.BitArray.Create<sp/>IMesh.NumFaces_<sp/></highlight></codeline>
<codeline lineno="415"><highlight class="comment"></highlight></codeline>
<codeline lineno="416"><highlight class="comment"><sp/><sp/><sp/><sp/>local<sp/>faces<sp/>=<sp/>#{1..obj.numfaces}</highlight></codeline>
<codeline lineno="417"><highlight class="comment"><sp/><sp/><sp/><sp/>local<sp/>elements<sp/>=<sp/>#()</highlight></codeline>
<codeline lineno="418"><highlight class="comment"></highlight></codeline>
<codeline lineno="419"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="420"><highlight class="comment"><sp/><sp/><sp/><sp/>--<sp/>CACHED<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="421"><highlight class="comment"><sp/><sp/><sp/><sp/>local<sp/>IMeshElementFromFace<sp/>=<sp/>IMesh.ElementFromFace</highlight></codeline>
<codeline lineno="422"><highlight class="comment"><sp/><sp/><sp/><sp/>local<sp/>IBitArrayClearAll<sp/>=<sp/>IBitArray.ClearAll<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="423"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="424"><highlight class="comment"><sp/><sp/><sp/><sp/>while<sp/>not<sp/>faces.isEmpty<sp/>do<sp/>(</highlight></codeline>
<codeline lineno="425"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="426"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IBitArrayClearAll()</highlight></codeline>
<codeline lineno="427"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IMeshElementFromFace<sp/>((firstBit<sp/>faces)-1)<sp/>IBitArray<sp/>IAdjFaceList</highlight></codeline>
<codeline lineno="428"><highlight class="comment"></highlight></codeline>
<codeline lineno="429"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IMesh.FaceSel<sp/>=<sp/>IBitArray</highlight></codeline>
<codeline lineno="430"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementFaces<sp/><sp/>=<sp/>getFaceSelection<sp/>obj</highlight></codeline>
<codeline lineno="431"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>faces<sp/>-=<sp/>elementFaces</highlight></codeline>
<codeline lineno="432"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="433"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>append<sp/>elements<sp/>elementFaces</highlight></codeline>
<codeline lineno="434"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="435"><highlight class="comment"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="436"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="437"><highlight class="comment"><sp/><sp/><sp/>elements</highlight></codeline>
<codeline lineno="438"><highlight class="comment"></highlight></codeline>
<codeline lineno="439"><highlight class="comment">)</highlight></codeline>
<codeline lineno="440"><highlight class="comment"></highlight></codeline>
<codeline lineno="441"><highlight class="comment">IBitArray<sp/>=<sp/>g.BitArray.Create<sp/>IMesh.NumFaces_<sp/></highlight></codeline>
<codeline lineno="442"><highlight class="comment">IBitArray.ClearAll()</highlight></codeline>
<codeline lineno="443"><highlight class="comment"></highlight></codeline>
<codeline lineno="444"><highlight class="comment">IMesh.ElementFromFace<sp/>((firstBit<sp/>faces)-1)<sp/>IBitArray<sp/>IAdjFaceList</highlight></codeline>
<codeline lineno="445"><highlight class="comment">IMesh.FaceSel<sp/>=<sp/>IBitArray</highlight></codeline>
<codeline lineno="446"><highlight class="comment">elementFaces<sp/><sp/>=<sp/>getFaceSelection<sp/>obj</highlight></codeline>
<codeline lineno="447"><highlight class="comment">faces<sp/>-=<sp/>elementFaces<sp/><sp/></highlight></codeline>
<codeline lineno="448"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="449"><highlight class="comment"><sp/>*<sp/>OR</highlight></codeline>
<codeline lineno="450"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="451"><highlight class="comment">IMesh.ElementFromFace<sp/>((firstBit<sp/>faces)-1)<sp/>IBitArray<sp/>IAdjFaceList</highlight></codeline>
<codeline lineno="452"><highlight class="comment"></highlight></codeline>
<codeline lineno="453"><highlight class="comment"></highlight></codeline>
<codeline lineno="454"><highlight class="comment">fn<sp/>getEditableMeshElements<sp/>obj<sp/>=<sp/>(</highlight></codeline>
<codeline lineno="455"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="456"><highlight class="comment"><sp/><sp/><sp/><sp/>fn<sp/>firstBit<sp/>bits<sp/>=<sp/></highlight></codeline>
<codeline lineno="457"><highlight class="comment"><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline lineno="458"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local<sp/>b</highlight></codeline>
<codeline lineno="459"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>n<sp/>in<sp/>bits<sp/>while<sp/>not<sp/>(b<sp/>=<sp/>n;<sp/>bits[n])<sp/>do<sp/>()</highlight></codeline>
<codeline lineno="460"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b</highlight></codeline>
<codeline lineno="461"><highlight class="comment"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="462"><highlight class="comment"></highlight></codeline>
<codeline lineno="463"><highlight class="comment"><sp/><sp/><sp/><sp/>local<sp/>faces<sp/>=<sp/>#{1..obj.numfaces}</highlight></codeline>
<codeline lineno="464"><highlight class="comment"><sp/><sp/><sp/><sp/>local<sp/>meshopgetElementsUsingFace<sp/>=<sp/>meshop.getElementsUsingFace</highlight></codeline>
<codeline lineno="465"><highlight class="comment"><sp/><sp/><sp/><sp/>local<sp/>elements<sp/>=<sp/>#()</highlight></codeline>
<codeline lineno="466"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="467"><highlight class="comment"><sp/><sp/><sp/><sp/>while<sp/>not<sp/>faces.isEmpty<sp/>do<sp/>(</highlight></codeline>
<codeline lineno="468"><highlight class="comment"></highlight></codeline>
<codeline lineno="469"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>element<sp/>=<sp/>meshopgetElementsUsingFace<sp/>obj<sp/>(firstBit<sp/>faces)</highlight></codeline>
<codeline lineno="470"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>append<sp/>elements<sp/>element<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="471"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>faces<sp/>-=<sp/>element</highlight></codeline>
<codeline lineno="472"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="473"><highlight class="comment"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="474"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="475"><highlight class="comment"><sp/><sp/><sp/><sp/>elements</highlight></codeline>
<codeline lineno="476"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="477"><highlight class="comment">)</highlight></codeline>
<codeline lineno="478"><highlight class="comment"></highlight></codeline>
<codeline lineno="479"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="D:/ReneBaca/Aprog/Micra/Micra_Csharp/Micra.Core/SceneObject.cs"/>
  </compounddef>
</doxygen>
