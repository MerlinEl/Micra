<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="_obj_ops_8cs" kind="file">
    <compoundname>ObjOps.cs</compoundname>
    <innerclass refid="class_micra_1_1_core_1_1_obj_ops" prot="public">Micra::Core::ObjOps</innerclass>
    <innernamespace refid="namespace_micra_1_1_core">Micra::Core</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Autodesk.Max;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections.Generic;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Linq;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Micra.Core<sp/>{</highlight></codeline>
<codeline lineno="7" refid="class_micra_1_1_core_1_1_obj_ops" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_micra_1_1_core_1_1_obj_ops" kindref="compound">ObjOps</ref><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>List&lt;Node&gt;<sp/>GetSlectedNodes()<sp/>=&gt;<sp/>Kernel.Scene.SelectedNodes().ToList();</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_micra_1_1_core_1_1_node" kindref="compound">Node</ref><sp/>GetFirstSlectedNode()<sp/>=&gt;<sp/>GetSlectedNodes().FirstOrDefault();</highlight></codeline>
<codeline lineno="17" refid="class_micra_1_1_core_1_1_obj_ops_1ad5d9321273d7494e95b93ff8ae96afb8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_micra_1_1_core_1_1_obj_ops_1ad5d9321273d7494e95b93ff8ae96afb8" kindref="member">DeselectAll</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>redraw<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Too<sp/>slow</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>nodes<sp/>=<sp/>Kernel.Scene.SelectedNodes();</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes.ForEach(n<sp/>=&gt;<sp/>n.Selected<sp/>=<sp/>false);</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>redraw<sp/>)<sp/>Kernel.RedrawViews();*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="class_micra_1_1_core_1_1_global_methods" kindref="compound">GlobalMethods</ref>.<ref refid="class_micra_1_1_core_1_1_global_methods_1a15fd44a94c61bd3de798e3fc3cfbcf34" kindref="member">SubObjectLevel</ref><sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kernel._Interface.ClearNodeSelection(redraw);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_micra_1_1_core_1_1_node" kindref="compound">Node</ref><sp/>node<sp/>=<sp/>Kernel.Scene.SelectedNodes().FirstOrDefault();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>node<sp/>!=<sp/>null<sp/>)<sp/>node.Object.DeselectAll(redraw);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="class_micra_1_1_core_1_1_obj_ops_1a3a0f13f57afb89b080fa22470a8aae50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_micra_1_1_core_1_1_obj_ops_1a3a0f13f57afb89b080fa22470a8aae50" kindref="member">SelectAll</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hidden<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>redraw<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Too<sp/>slow</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kernel._Interface.DisableSceneRedraw();</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kernel._Interface.SuspendEditing((uint)TaskModes.TASK_MODE_MODIFY,<sp/>true);<sp/>//for<sp/>now<sp/>seems<sp/>not<sp/>works<sp/>...<sp/>see<sp/>it<sp/>later</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>try<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DeselectAll(false);<sp/>//first<sp/>deselect<sp/>all,<sp/>some<sp/>hidden<sp/>may<sp/>be<sp/>selected<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foreach<sp/>(<sp/>Node<sp/>n<sp/>in<sp/>Kernel.Scene.RootNode.Children<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>!hidden<sp/>&amp;&amp;<sp/>!n.Visible<sp/>)<sp/>continue;</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n.Selected<sp/>=<sp/>true;</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>catch<sp/>(<sp/>Exception<sp/>ex<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>throw<sp/>new<sp/>Exception(ex.Message);</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>finally<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kernel._Interface.ResumeEditing((uint)TaskModes.TASK_MODE_MODIFY,<sp/>true);<sp/>//for<sp/>now<sp/>seem<sp/>not<sp/>works<sp/>...<sp/>see<sp/>it<sp/>later</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kernel._Interface.EnableSceneRedraw();</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>redraw<sp/>)<sp/>Kernel.RedrawViews();*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="class_micra_1_1_core_1_1_global_methods" kindref="compound">GlobalMethods</ref>.<ref refid="class_micra_1_1_core_1_1_global_methods_1a15fd44a94c61bd3de798e3fc3cfbcf34" kindref="member">SubObjectLevel</ref><sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DeselectAll(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//first<sp/>deselect<sp/>all,<sp/>some<sp/>hidden<sp/>objects<sp/>may<sp/>be<sp/>selected<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;Node&gt;<sp/>nodes<sp/>=<sp/>Kernel.Scene.RootNode.Children</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.Where(n<sp/>=&gt;<sp/>!hidden<sp/>?<sp/>n.Visible<sp/>:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.ToList();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kernel._Interface.SelectNodeTab(nodes.ToIINodeTab(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>redraw);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_micra_1_1_core_1_1_node" kindref="compound">Node</ref><sp/>node<sp/>=<sp/>Kernel.Scene.SelectedNodes().FirstOrDefault();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>node<sp/>!=<sp/>null<sp/>)<sp/>node.Object.SelectAll(redraw);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="class_micra_1_1_core_1_1_obj_ops_1afa88f79520cd527786184d7b144fb815" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_micra_1_1_core_1_1_obj_ops_1afa88f79520cd527786184d7b144fb815" kindref="member">SelectAllOfType</ref>(<ref refid="struct_micra_1_1_core_1_1_class_i_d" kindref="compound">ClassID</ref><sp/>classId,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hidden<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clearSel<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>redraw<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>clearSel<sp/>)<sp/>DeselectAll(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;Node&gt;<sp/>nodes<sp/>=<sp/>Kernel.Scene.RootNode.Children</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.Where(n<sp/>=&gt;<sp/>!hidden<sp/>?<sp/>n.Visible<sp/>:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.Where(n<sp/>=&gt;<sp/>n.Object.ClassID<sp/>==<sp/>classId)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.ToList();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kernel._Interface.SelectNodeTab(nodes.ToIINodeTab(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>redraw);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82" refid="class_micra_1_1_core_1_1_obj_ops_1a7c7357c5d968b012d23800c51ef99dc7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_micra_1_1_core_1_1_obj_ops_1a7c7357c5d968b012d23800c51ef99dc7" kindref="member">SelectAllOfType</ref>(<ref refid="struct_micra_1_1_core_1_1_super_class_i_d" kindref="compound">SuperClassID</ref><sp/>sClassId,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hidden<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clearSel<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>redraw<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>clearSel<sp/>)<sp/>DeselectAll(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;Node&gt;<sp/>nodes<sp/>=<sp/>Kernel.Scene.RootNode.Children</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.Where(n<sp/>=&gt;<sp/>!hidden<sp/>?<sp/>n.Visible<sp/>:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.Where(n<sp/>=&gt;<sp/>n.Object.SuperClassID<sp/>==<sp/>sClassId)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.ToList();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kernel._Interface.SelectNodeTab(nodes.ToIINodeTab(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>redraw);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91" refid="class_micra_1_1_core_1_1_obj_ops_1afb91de568b454e790c69da03d1663bc4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_micra_1_1_core_1_1_obj_ops_1afb91de568b454e790c69da03d1663bc4" kindref="member">ShowClass</ref>(IEnumerable&lt;Node&gt;<sp/>nodes)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes.ForEach(n<sp/>=&gt;<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kernel.WriteLine(</highlight><highlight class="stringliteral">&quot;obj:{0}&quot;</highlight><highlight class="normal">,<sp/>n.Name);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kernel.WriteLine(</highlight><highlight class="stringliteral">&quot;\tclassOf:{0}\n\tsuperClassOf:{1}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n.ClassOf(),<sp/>n.SuperClassOf());</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99" refid="class_micra_1_1_core_1_1_obj_ops_1a3c9ae3a8d33ece92604fab301823a79e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_micra_1_1_core_1_1_obj_ops_1a3c9ae3a8d33ece92604fab301823a79e" kindref="member">ShowParameters</ref>(IEnumerable&lt;Node&gt;<sp/>nodes)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kernel.WriteLine(</highlight><highlight class="stringliteral">&quot;Selected<sp/>Nodes(<sp/>{0}<sp/>)<sp/>Parameters<sp/>&gt;<sp/>&quot;</highlight><highlight class="normal">,<sp/>nodes.Count());</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes.ForEach&lt;<ref refid="class_micra_1_1_core_1_1_node" kindref="compound">Node</ref>&gt;(n<sp/>=&gt;<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kernel.WriteLine(</highlight><highlight class="stringliteral">&quot;\tObject:{0}<sp/>type:{1}<sp/>params:{2}&quot;</highlight><highlight class="normal">,<sp/>n.Name,<sp/>n.GetType().Name,<sp/>n.Object.Params.Count());</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<sp/><ref refid="interface_micra_1_1_core_1_1_i_parameter" kindref="compound">IParameter</ref><sp/>p<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>n.Object.Params<sp/>)<sp/>Kernel.WriteLine(</highlight><highlight class="stringliteral">&quot;\t\tparam:{0}&quot;</highlight><highlight class="normal">,<sp/>p.Name);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="class_micra_1_1_core_1_1_obj_ops_1a2b68c50b8252ecb7cedcb9e8128b1610" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>List&lt;Node&gt;<sp/><ref refid="class_micra_1_1_core_1_1_obj_ops_1a2b68c50b8252ecb7cedcb9e8128b1610" kindref="member">GetNodeInsatances</ref>(<ref refid="class_micra_1_1_core_1_1_node" kindref="compound">Node</ref><sp/>node)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IINodeTab<sp/>instanceAndRef<sp/>=<sp/>Kernel._Global.NodeTab.Create();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kernel._InstanceMgr.GetInstances(node._IINode,<sp/>instanceAndRef);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>instanceAndRef.ToIEnumerable&lt;IINode&gt;()</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.Select(n<sp/>=&gt;<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_micra_1_1_core_1_1_node" kindref="compound">Node</ref>(n))</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.ToList();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116" refid="class_micra_1_1_core_1_1_obj_ops_1a93f5b8e2286bb09fc22cac529653dbfb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_micra_1_1_core_1_1_obj_ops_1a93f5b8e2286bb09fc22cac529653dbfb" kindref="member">SelectNodes</ref>(List&lt;Node&gt;<sp/>nodes,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>redraw<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Kernel._Interface.RedrawViews(Kernel.Now,<sp/>RedrawFlags.Begin,<sp/>null);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kernel._Interface.DisableSceneRedraw();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kernel._Interface.SuspendEditing((<sp/>uint<sp/>)<ref refid="namespace_micra_1_1_core_1a49887bfc6cfd0ab41a046b9d7659dcbf" kindref="member">TaskModes</ref>.TASK_MODE_MODIFY,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//for<sp/>now<sp/>seems<sp/>not<sp/>works<sp/>...<sp/>see<sp/>it<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DeselectAll(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<sp/><ref refid="class_micra_1_1_core_1_1_node" kindref="compound">Node</ref><sp/>n<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>nodes<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!n.<ref refid="class_micra_1_1_core_1_1_node_1aee766302221436d38108eac03324f76b" kindref="member">Visible</ref><sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n.Selected<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<sp/>Exception<sp/>ex<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Exception(ex.Message);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kernel._Interface.ResumeEditing((<sp/>uint<sp/>)<ref refid="namespace_micra_1_1_core_1a49887bfc6cfd0ab41a046b9d7659dcbf" kindref="member">TaskModes</ref>.TASK_MODE_MODIFY,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//for<sp/>now<sp/>seem<sp/>not<sp/>works<sp/>...<sp/>see<sp/>it<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kernel._Interface.EnableSceneRedraw();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kernel.WriteLine(</highlight><highlight class="stringliteral">&quot;Selected<sp/>Instance<sp/>nodes:{0}/{1}&quot;</highlight><highlight class="normal">,<sp/>Kernel.Scene.SelectedNodes().Count(),<sp/>Kernel.Scene.RootNode.Children.Count());</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Kernel._Interface.RedrawViews(Kernel.Now,<sp/>RedrawFlags.End,<sp/>null);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>redraw<sp/>)<sp/>Kernel.RedrawViews();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="class_micra_1_1_core_1_1_obj_ops_1aa0011818fb56bd21af032892abe04402" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_micra_1_1_core_1_1_obj_ops_1aa0011818fb56bd21af032892abe04402" kindref="member">SelectSimillarNodes</ref>(List&lt;Node&gt;<sp/>srcNodes)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kernel.WriteLine(</highlight><highlight class="stringliteral">&quot;SelectNodesWithSimillarVolume<sp/>&gt;<sp/>Sel<sp/>nodes:{0}&quot;</highlight><highlight class="normal">,<sp/>srcNodes.Count());</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//collect<sp/>selected<sp/>geometry<sp/>objects<sp/>volumes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;double&gt;<sp/>volumes<sp/>=<sp/>srcNodes</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.Where(n<sp/>=&gt;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n.IsSuperClassOf(SuperClassID.GeometricObject)<sp/>&amp;&amp;<sp/></highlight><highlight class="comment">//get<sp/>all<sp/>geometry<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!n.IsClassOf(<ref refid="struct_micra_1_1_core_1_1_class_i_d" kindref="compound">ClassID</ref>.<ref refid="struct_micra_1_1_core_1_1_class_i_d_1abed81e2dd42f4d33191d47fbc9c5faf9" kindref="member">TargetObject</ref>)<sp/></highlight><highlight class="comment">//exclude<sp/>any<sp/>light<sp/>Target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.Select(n<sp/>=&gt;<sp/>n.Object.GetArea()).Distinct()</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.ToList();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kernel.WriteLine(</highlight><highlight class="stringliteral">&quot;\tVolumes<sp/>types:{0}&quot;</highlight><highlight class="normal">,<sp/>volumes.Count());</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IEnumerable&lt;Node&gt;<sp/>allNodes<sp/>=<sp/>Kernel.Scene.AllNodes();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kernel.WriteLine(</highlight><highlight class="stringliteral">&quot;\tAll<sp/>nodes:{0}&quot;</highlight><highlight class="normal">,<sp/>allNodes.Count());</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//get<sp/>geometry<sp/>objects<sp/>with<sp/>similar<sp/>volume</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;Node&gt;<sp/>matchVolumeNodes<sp/>=<sp/>allNodes</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.Where(n<sp/>=&gt;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n.IsSuperClassOf(SuperClassID.GeometricObject)<sp/>&amp;&amp;<sp/></highlight><highlight class="comment">//get<sp/>all<sp/>geometry<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!n.IsClassOf(<ref refid="struct_micra_1_1_core_1_1_class_i_d" kindref="compound">ClassID</ref>.<ref refid="struct_micra_1_1_core_1_1_class_i_d_1abed81e2dd42f4d33191d47fbc9c5faf9" kindref="member">TargetObject</ref>)<sp/>&amp;&amp;<sp/></highlight><highlight class="comment">//exclude<sp/>any<sp/>light<sp/>Target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>volumes.IndexOf(n.Object.GetArea())<sp/>!=<sp/>-1</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.Select(n<sp/>=&gt;<sp/>n)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.ToList();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kernel.WriteLine(</highlight><highlight class="stringliteral">&quot;\tobjects<sp/>count:{0}&quot;</highlight><highlight class="normal">,<sp/>matchVolumeNodes.Count());</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//execute<sp/>action<sp/>with<sp/>undo<sp/>enabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kernel._TheHold.Begin();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SelectNodes(matchVolumeNodes,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kernel._TheHold.Accept(</highlight><highlight class="stringliteral">&quot;Select<sp/>Simillar&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kernel._TheHold.End();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*private<sp/>bool<sp/>IsMatchVolume(double<sp/>val,<sp/>List&lt;double&gt;<sp/>valList)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="comment"></highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>valList.IndexOf(val)<sp/>!=<sp/>-1;</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="class_micra_1_1_core_1_1_obj_ops_1aadee372b829d9dabb44882913f3c2124" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_micra_1_1_core_1_1_obj_ops_1aadee372b829d9dabb44882913f3c2124" kindref="member">SelectInstances</ref>(<ref refid="class_micra_1_1_core_1_1_node" kindref="compound">Node</ref><sp/>node,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>redraw<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>nodeInstances<sp/>=<sp/>GetNodeInsatances(node);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>nodeInstances.Count<sp/>==<sp/>0<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SelectNodes(nodeInstances);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>redraw<sp/>)<sp/>Kernel.RedrawViews();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment">/*IINode<sp/>obj<sp/>=<sp/>MxCollection.GetFirstSelectedNode();<sp/>//Autodesk.Max.Wrappers.INode</highlight></codeline>
<codeline lineno="190"><highlight class="comment">ISubClassList<sp/>clist<sp/>=<sp/>GlobalInterface.Instance.ClassDirectory.Instance.GetClassList(obj.ObjectRef.Eval(0).Obj.SuperClassID);</highlight></codeline>
<codeline lineno="191"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment">//ITriObject<sp/>triObj<sp/>=<sp/>node.ObjectRef.FindBaseObject()<sp/>as<sp/>ITriObject;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment">//IMesh<sp/>mesh<sp/>=<sp/>triObj.Mesh;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">//IntPtr<sp/>meshPtr<sp/>=<sp/>mesh.NativePointer;<sp/>//same<sp/>as<sp/>my<sp/>C++<sp/>pointer<sp/>-<sp/>so<sp/>it&apos;s<sp/>correct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment">//n._Node.IsHidden(NodeHideFlags.All,<sp/>false)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">/*IINodeTab<sp/>nodes<sp/>=<sp/>Kernel._Global.NodeTab.Create();</highlight></codeline>
<codeline lineno="198"><highlight class="comment">foreach<sp/>(<sp/>Node<sp/>n<sp/>in<sp/>Kernel.Scene.RootNode.Children<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="comment"></highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(<sp/>!hidden<sp/>&amp;&amp;<sp/>n._Node.IsHidden(NodeHideFlags.All,<sp/>false)<sp/>)<sp/>continue;</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/><sp/><sp/><sp/>nodes.AppendNode((<sp/>n._Node<sp/>),<sp/>true,<sp/>1);</highlight></codeline>
<codeline lineno="202"><highlight class="comment">}</highlight></codeline>
<codeline lineno="203"><highlight class="comment">Kernel._Interface.SelectNodeTab(nodes,<sp/>true,<sp/>redraw);</highlight></codeline>
<codeline lineno="204"><highlight class="comment">Kernel._Interface.ClearNodeSelection(redraw);</highlight></codeline>
<codeline lineno="205"><highlight class="comment"></highlight></codeline>
<codeline lineno="206"><highlight class="comment">public<sp/>static<sp/>IINodeTab<sp/>ToIINodeTab&lt;T&gt;(List&lt;T&gt;<sp/>nodesList)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="comment"></highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/><sp/><sp/><sp/>IINodeTab<sp/>nodes<sp/>=<sp/>Kernel._Global.NodeTab.Create();</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/><sp/><sp/><sp/>nodesList.ForEach(n<sp/>=&gt;<sp/>nodes.AppendNode((<sp/>n<sp/>as<sp/>IINode<sp/>),<sp/>true,<sp/>1));</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>nodes;</highlight></codeline>
<codeline lineno="211"><highlight class="comment">}</highlight></codeline>
<codeline lineno="212"><highlight class="comment"></highlight></codeline>
<codeline lineno="213"><highlight class="comment">List&lt;IINode&gt;<sp/>nodes<sp/>=<sp/>new<sp/>List&lt;IINode&gt;()<sp/>{<sp/>};</highlight></codeline>
<codeline lineno="214"><highlight class="comment">foreach<sp/>(<sp/>Node<sp/>n<sp/>in<sp/>Kernel.Scene.RootNode.Children<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="comment"></highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/><sp/><sp/><sp/>Kernel.WriteLine(&quot;Object<sp/>class:{0}<sp/>Compare<sp/>class:{1}<sp/>match:{2}&quot;,<sp/>n.Object.SuperClassID,<sp/>classId,<sp/>(<sp/>n.Object.SuperClassID<sp/>==<sp/>classId<sp/>));</highlight></codeline>
<codeline lineno="217"><highlight class="comment"></highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(<sp/>n.Object.SuperClassID<sp/>==<sp/>classId<sp/>)<sp/>nodes.Add(n._Node);</highlight></codeline>
<codeline lineno="219"><highlight class="comment">}</highlight></codeline>
<codeline lineno="220"><highlight class="comment">if<sp/>(<sp/>clearSel<sp/>)<sp/>DeselectAll(false);</highlight></codeline>
<codeline lineno="221"><highlight class="comment">Kernel._Interface.SelectNodeTab(Collections.ToIINodeTab(nodes),<sp/>true,<sp/>redraw);</highlight></codeline>
<codeline lineno="222"><highlight class="comment"></highlight></codeline>
<codeline lineno="223"><highlight class="comment">public<sp/>static<sp/>List&lt;IINode&gt;<sp/>GetSelection()<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="comment"></highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/><sp/><sp/><sp/>IINodeTab<sp/>selNodes<sp/>=<sp/>Kernel._Global.NodeTab.Create();</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/><sp/><sp/><sp/>Kernel._Interface.GetSelNodeTab(selNodes);</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>selNodes.ToIEnumerable().ToList();</highlight></codeline>
<codeline lineno="228"><highlight class="comment">}</highlight></codeline>
<codeline lineno="229"><highlight class="comment"></highlight></codeline>
<codeline lineno="230"><highlight class="comment">//got<sp/>crash<sp/>when<sp/>operate<sp/>with<sp/>Objects</highlight></codeline>
<codeline lineno="231"><highlight class="comment">IINodeTab<sp/>nodes<sp/>=<sp/>Kernel._Global.NodeTab.Create();</highlight></codeline>
<codeline lineno="232"><highlight class="comment">Objects.ForEach&lt;SceneObject&gt;(o<sp/>=&gt;<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/><sp/><sp/><sp/>Kernel.WriteLine(&quot;Object:{0}<sp/>type:{1}&quot;,<sp/>o.Name,<sp/>o.GetType().Name);</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/><sp/><sp/><sp/>o.Params.ForEach&lt;IParameter&gt;(p<sp/>=&gt;<sp/>Kernel.WriteLine(&quot;\tparam:{0}&quot;,<sp/>p.Name));</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/><sp/><sp/><sp/>try<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes.AppendNode(o.Node._Node<sp/>as<sp/>IINode,<sp/>true,<sp/>1);<sp/>//o.Node._Node</highlight></codeline>
<codeline lineno="237"><highlight class="comment"></highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/><sp/><sp/><sp/>}<sp/>catch<sp/>(<sp/>Exception<sp/>ex<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="comment"></highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>throw<sp/>new<sp/>Exception(&quot;Exception:&quot;<sp/>+<sp/>ex.Message<sp/>+<sp/>&quot;\nobj:&quot;<sp/>+<sp/>o.Name<sp/>+<sp/>&quot;<sp/>type:&quot;<sp/>+<sp/>o.GetType().FullName);</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/><sp/><sp/><sp/>//nodes.AppendNode(<sp/>o.Node._Node.ObjectRef.Eval(0).Obj<sp/>as<sp/>IINode,<sp/>true,<sp/>1);<sp/>//o.Node._Node</highlight></codeline>
<codeline lineno="243"><highlight class="comment">});</highlight></codeline>
<codeline lineno="244"><highlight class="comment">Kernel._Interface.SelectNodeTab(nodes,<sp/>true,<sp/>redraw);*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="D:/ReneBaca/Aprog/Micra/Micra_Csharp/Micra.Core/ObjOps.cs"/>
  </compounddef>
</doxygen>
