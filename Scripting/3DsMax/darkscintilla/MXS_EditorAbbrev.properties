/*//////////   SCRIPT:   bgaAbbreviation Settings   //////////*/
/*//////////   CREATED BY:   Branko Zivkovic   //////////*/
/*//////////   EMAIL:   barigazy@hotmail.com   //////////*/

/* COMMENTS */
/*=/*___*/
sig=/*//////////   SCRIPT:   SCRIPTNAME v1.   //////////*/\n/*//////////   CREATED BY:   Branko Zivkovic   //////////*/\n/*//////////   EMAIL:   barigazy@hotmail.com   //////////*/
/* VALUES */
arr=arr = #()
varr =valArr = #(100, 200, 300, 400, 500)
sarr =strArr = #("STR", "STR", "STR", "STR", "STR")
oarr=objArr = #(VAR, VAR, VAR, VAR, VAR)
marr=multyArr = #(#(VAR, VAR), #(VAR, VAR), #(VAR, VAR))
p2=[100,200] 
p3=[100,200,300]
str=""
asa=as array
ass=as string
asn=as name
asi=as integer
asf=as float
cp=convertToPoly obj
cm=convertToMesh obj
cs=convertToSplineShape spl
sam=snapshotAsMesh obj

/* CODE STRUCTURES */
stc=struct NAME\n(\n\tVAR1,\n\tVAR2,\n\tfn\n)
fn=fn FNNAME VAR1 VAR2: =\n(\n\tCODE\n)
mfn=mapped fn FNNAME VAR1 VAR2: =\n(\n\tCODE\n)
ifte=if ARG then\n(\n\tSTATE1\n)\nelse\n(\n\tSTATE2\n)
ifd=if ARG do\n(\n\tSTATE\n)
cof=case of (\n\t(ARG1a==ARG1b): (CODE)\n\t(ARG2a==ARG2b): (CODE)\n\t(ARG3a==ARG3b): (CODE)\n\tdefault: (CODE)\n)
cvof=case ARG of (\n\t(ARG1): (CODE)\n\t(ARG2): (CODE)\n\t(ARG3): (CODE)\n\tdefault: (CODE)\n)
foro=for o in WHAT do\n(\n\t\n)\n
foroc=VAR = for o in WHAT collect\n(\n\t\n)\n
forow=for o in WHAT where ARG1 == ARG2 do\n(\n\t\n)\n
forowc=VAR = for o in WHAT where ARG1 == ARG2 collect\n(\n\t\n)\n
fori=for i = 1 to count do\n(\n\t\n)\n
foric=VAR = for i = 1 to count collect\n(\n\t\n)\n
foriw=for i = 1 to count where ARG1 == ARG2 do\n(\n\t\n)\n
foriwc=VAR = for i = 1 to count where ARG1 == ARG2 collect\n(\n\t\n)\n
foribw=for i = 1 to count by NM where ARG1 == ARG2 do\n(\n\t\n)\n
foribwc=VAR = for i = 1 to count by NM where ARG1 == ARG2 collect\n(\n\t\n)\n
forc = for i = count to 1 by -1 go\n(\n\t\n)\n
forcc = for i = count to 1 by -1 collect\n(\n\t\n)\n
forcw = for i = count to 1 by -1 where ARG1 == ARG2 do\n(\n\t\n)\n
forcwc = for i = count to 1 by -1 where ARG1 == ARG2 collect\n(\n\t\n)\n

/* CUSTOM ATTRIBUTES */
attr=def = attributes theDef "NAME(OPTIONAL)"\n(\n\tparameters main rollout:params\n\t(\n\t\tpar\n\t)\n\trollout params "NAME"\n\t(\n\t\tspn\n\t)\n\t\n)\ncustAttributes.add $ def
par= name type:# ui: default:
parf=name type:#float ui: default:

/*MXS_CONTROLS*/
roll=try(destroyDialog ::bgaRoll)catch()\nrollout bgaRoll "• • •"\n(\n\tlocal VAR\n\t\n\tMXSCTRL C "" pos:[x,y] width:NM height:NM\n\ton MXSCTRL EV do\n\t(\n\t\tCODE\n\t)\n\t\n\ton bgaRoll open do\n\t(\n\t\tCODE\n\t)\n\ton bgaRoll close do\n\t(\n\t\tCODE\n\t)\n)\ncreateDialog bgaRoll| W H X Y style:#(#style_titlebar, #style_sysmenu, #style_toolwindow)
btn=button btn| "" width: height: offset:[0,0] across:
pbn=pickButton pbn| "" width: height: offset:[0,0] across:
spn=spinner spn| "" width: fieldWidth: range:[,,] type:# offset:[0,0] across:
chb=checkButton chb| "" width: height: offset:[0,0] across:
ddl=dropDownList ddl| "" width: height: offset:[0,0] across:
grp=group ""\n(\n\tbtn\n\tspn\n\tchb\n\tpbn\n)
clr=colorpicker clr| "" color: alpha: fieldWidth: height: modal: title: offset:[0,0] across:
lbl=label lbl| "" offset:[0,0] across:

/* EVENT HANDLERS */
onb=on btn| pressed do\n(\n\t\n)
ons=on spn| changed val do\n(\n\t\n)
onc=on chb| picked obj do\n(\n\t\n)